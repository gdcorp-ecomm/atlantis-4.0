//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.235.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.CarmaTrustedShoppers.Impl.CarmaWs {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSgdCarmaServiceSoap", Namespace="urn:WSgdCarmaService")]
    public partial class WSgdCarmaService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendInvitationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRoleDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeprecateRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssociateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeassociateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeassociateAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback RevokeTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RevokeAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrustedShoppersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDelegatedResourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDelegatedRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetManagedResourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetManagedResourcesByShopperOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDelegatesByResourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssociateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearAndAssociateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveTrustedShopperOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveByResourceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSgdCarmaService() {
            this.Url = global::Atlantis.Framework.CarmaTrustedShoppers.Impl.Properties.Settings.Default.Atlantis_Framework_CarmaTrustedShoppers_Impl_CarmaWs_WSgdCarmaService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendInvitationCompletedEventHandler SendInvitationCompleted;
        
        /// <remarks/>
        public event CreateRoleCompletedEventHandler CreateRoleCompleted;
        
        /// <remarks/>
        public event UpdateRoleDataCompletedEventHandler UpdateRoleDataCompleted;
        
        /// <remarks/>
        public event GetRolesCompletedEventHandler GetRolesCompleted;
        
        /// <remarks/>
        public event DeprecateRoleCompletedEventHandler DeprecateRoleCompleted;
        
        /// <remarks/>
        public event AssociateCompletedEventHandler AssociateCompleted;
        
        /// <remarks/>
        public event DeassociateCompletedEventHandler DeassociateCompleted;
        
        /// <remarks/>
        public event DeassociateAllCompletedEventHandler DeassociateAllCompleted;
        
        /// <remarks/>
        public event RevokeTypeCompletedEventHandler RevokeTypeCompleted;
        
        /// <remarks/>
        public event RevokeAllCompletedEventHandler RevokeAllCompleted;
        
        /// <remarks/>
        public event GetTrustedShoppersCompletedEventHandler GetTrustedShoppersCompleted;
        
        /// <remarks/>
        public event GetDelegatedResourcesCompletedEventHandler GetDelegatedResourcesCompleted;
        
        /// <remarks/>
        public event GetDelegatedRolesCompletedEventHandler GetDelegatedRolesCompleted;
        
        /// <remarks/>
        public event GetManagedResourcesCompletedEventHandler GetManagedResourcesCompleted;
        
        /// <remarks/>
        public event GetManagedResourcesByShopperCompletedEventHandler GetManagedResourcesByShopperCompleted;
        
        /// <remarks/>
        public event GetDelegatesByResourceCompletedEventHandler GetDelegatesByResourceCompleted;
        
        /// <remarks/>
        public event AssociateListCompletedEventHandler AssociateListCompleted;
        
        /// <remarks/>
        public event ClearAndAssociateCompletedEventHandler ClearAndAssociateCompleted;
        
        /// <remarks/>
        public event RemoveTrustedShopperCompletedEventHandler RemoveTrustedShopperCompleted;
        
        /// <remarks/>
        public event RemoveByResourceCompletedEventHandler RemoveByResourceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SendInvitation", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public short SendInvitation(string bstrPrimaryID, string bstrEmailAddress, string bstrRecipientFirstName, string bstrRecipientLastName, out string pbstrError) {
            object[] results = this.Invoke("SendInvitation", new object[] {
                        bstrPrimaryID,
                        bstrEmailAddress,
                        bstrRecipientFirstName,
                        bstrRecipientLastName});
            pbstrError = ((string)(results[1]));
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public void SendInvitationAsync(string bstrPrimaryID, string bstrEmailAddress, string bstrRecipientFirstName, string bstrRecipientLastName) {
            this.SendInvitationAsync(bstrPrimaryID, bstrEmailAddress, bstrRecipientFirstName, bstrRecipientLastName, null);
        }
        
        /// <remarks/>
        public void SendInvitationAsync(string bstrPrimaryID, string bstrEmailAddress, string bstrRecipientFirstName, string bstrRecipientLastName, object userState) {
            if ((this.SendInvitationOperationCompleted == null)) {
                this.SendInvitationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendInvitationOperationCompleted);
            }
            this.InvokeAsync("SendInvitation", new object[] {
                        bstrPrimaryID,
                        bstrEmailAddress,
                        bstrRecipientFirstName,
                        bstrRecipientLastName}, this.SendInvitationOperationCompleted, userState);
        }
        
        private void OnSendInvitationOperationCompleted(object arg) {
            if ((this.SendInvitationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendInvitationCompleted(this, new SendInvitationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#CreateRole", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int CreateRole(int lApplicationID, string bstrRole, string bstrDesc, out string pbstrError) {
            object[] results = this.Invoke("CreateRole", new object[] {
                        lApplicationID,
                        bstrRole,
                        bstrDesc});
            pbstrError = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRoleAsync(int lApplicationID, string bstrRole, string bstrDesc) {
            this.CreateRoleAsync(lApplicationID, bstrRole, bstrDesc, null);
        }
        
        /// <remarks/>
        public void CreateRoleAsync(int lApplicationID, string bstrRole, string bstrDesc, object userState) {
            if ((this.CreateRoleOperationCompleted == null)) {
                this.CreateRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRoleOperationCompleted);
            }
            this.InvokeAsync("CreateRole", new object[] {
                        lApplicationID,
                        bstrRole,
                        bstrDesc}, this.CreateRoleOperationCompleted, userState);
        }
        
        private void OnCreateRoleOperationCompleted(object arg) {
            if ((this.CreateRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRoleCompleted(this, new CreateRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#UpdateRoleData", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public short UpdateRoleData(int lApplicationID, int lRoleID, string bstrName, string bstrDesc, out string pbstrError) {
            object[] results = this.Invoke("UpdateRoleData", new object[] {
                        lApplicationID,
                        lRoleID,
                        bstrName,
                        bstrDesc});
            pbstrError = ((string)(results[1]));
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRoleDataAsync(int lApplicationID, int lRoleID, string bstrName, string bstrDesc) {
            this.UpdateRoleDataAsync(lApplicationID, lRoleID, bstrName, bstrDesc, null);
        }
        
        /// <remarks/>
        public void UpdateRoleDataAsync(int lApplicationID, int lRoleID, string bstrName, string bstrDesc, object userState) {
            if ((this.UpdateRoleDataOperationCompleted == null)) {
                this.UpdateRoleDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRoleDataOperationCompleted);
            }
            this.InvokeAsync("UpdateRoleData", new object[] {
                        lApplicationID,
                        lRoleID,
                        bstrName,
                        bstrDesc}, this.UpdateRoleDataOperationCompleted, userState);
        }
        
        private void OnUpdateRoleDataOperationCompleted(object arg) {
            if ((this.UpdateRoleDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRoleDataCompleted(this, new UpdateRoleDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetRoles", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetRoles(int lApplicationID) {
            object[] results = this.Invoke("GetRoles", new object[] {
                        lApplicationID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRolesAsync(int lApplicationID) {
            this.GetRolesAsync(lApplicationID, null);
        }
        
        /// <remarks/>
        public void GetRolesAsync(int lApplicationID, object userState) {
            if ((this.GetRolesOperationCompleted == null)) {
                this.GetRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRolesOperationCompleted);
            }
            this.InvokeAsync("GetRoles", new object[] {
                        lApplicationID}, this.GetRolesOperationCompleted, userState);
        }
        
        private void OnGetRolesOperationCompleted(object arg) {
            if ((this.GetRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRolesCompleted(this, new GetRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#DeprecateRole", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public short DeprecateRole(int lApplicationID, int lRoleID) {
            object[] results = this.Invoke("DeprecateRole", new object[] {
                        lApplicationID,
                        lRoleID});
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public void DeprecateRoleAsync(int lApplicationID, int lRoleID) {
            this.DeprecateRoleAsync(lApplicationID, lRoleID, null);
        }
        
        /// <remarks/>
        public void DeprecateRoleAsync(int lApplicationID, int lRoleID, object userState) {
            if ((this.DeprecateRoleOperationCompleted == null)) {
                this.DeprecateRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeprecateRoleOperationCompleted);
            }
            this.InvokeAsync("DeprecateRole", new object[] {
                        lApplicationID,
                        lRoleID}, this.DeprecateRoleOperationCompleted, userState);
        }
        
        private void OnDeprecateRoleOperationCompleted(object arg) {
            if ((this.DeprecateRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeprecateRoleCompleted(this, new DeprecateRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#Associate", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public short Associate(int lApplicationID, int lResourceID, int lResourceType, int lRoleID, string bstrPrimaryID, string bstrSecondaryID, out string pbstrError) {
            object[] results = this.Invoke("Associate", new object[] {
                        lApplicationID,
                        lResourceID,
                        lResourceType,
                        lRoleID,
                        bstrPrimaryID,
                        bstrSecondaryID});
            pbstrError = ((string)(results[1]));
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public void AssociateAsync(int lApplicationID, int lResourceID, int lResourceType, int lRoleID, string bstrPrimaryID, string bstrSecondaryID) {
            this.AssociateAsync(lApplicationID, lResourceID, lResourceType, lRoleID, bstrPrimaryID, bstrSecondaryID, null);
        }
        
        /// <remarks/>
        public void AssociateAsync(int lApplicationID, int lResourceID, int lResourceType, int lRoleID, string bstrPrimaryID, string bstrSecondaryID, object userState) {
            if ((this.AssociateOperationCompleted == null)) {
                this.AssociateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssociateOperationCompleted);
            }
            this.InvokeAsync("Associate", new object[] {
                        lApplicationID,
                        lResourceID,
                        lResourceType,
                        lRoleID,
                        bstrPrimaryID,
                        bstrSecondaryID}, this.AssociateOperationCompleted, userState);
        }
        
        private void OnAssociateOperationCompleted(object arg) {
            if ((this.AssociateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssociateCompleted(this, new AssociateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#Deassociate", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public short Deassociate(int lApplicationID, int lResourceID, int lResourceType, int lRoleID, string bstrPrimaryID, string bstrSecondaryID, out string pbstrError) {
            object[] results = this.Invoke("Deassociate", new object[] {
                        lApplicationID,
                        lResourceID,
                        lResourceType,
                        lRoleID,
                        bstrPrimaryID,
                        bstrSecondaryID});
            pbstrError = ((string)(results[1]));
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public void DeassociateAsync(int lApplicationID, int lResourceID, int lResourceType, int lRoleID, string bstrPrimaryID, string bstrSecondaryID) {
            this.DeassociateAsync(lApplicationID, lResourceID, lResourceType, lRoleID, bstrPrimaryID, bstrSecondaryID, null);
        }
        
        /// <remarks/>
        public void DeassociateAsync(int lApplicationID, int lResourceID, int lResourceType, int lRoleID, string bstrPrimaryID, string bstrSecondaryID, object userState) {
            if ((this.DeassociateOperationCompleted == null)) {
                this.DeassociateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeassociateOperationCompleted);
            }
            this.InvokeAsync("Deassociate", new object[] {
                        lApplicationID,
                        lResourceID,
                        lResourceType,
                        lRoleID,
                        bstrPrimaryID,
                        bstrSecondaryID}, this.DeassociateOperationCompleted, userState);
        }
        
        private void OnDeassociateOperationCompleted(object arg) {
            if ((this.DeassociateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeassociateCompleted(this, new DeassociateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#DeassociateAll", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public short DeassociateAll(int lApplicationID, int lResourceID, int lResourceType, string bstrPrimaryID, string bstrSecondaryID, out string pbstrError) {
            object[] results = this.Invoke("DeassociateAll", new object[] {
                        lApplicationID,
                        lResourceID,
                        lResourceType,
                        bstrPrimaryID,
                        bstrSecondaryID});
            pbstrError = ((string)(results[1]));
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public void DeassociateAllAsync(int lApplicationID, int lResourceID, int lResourceType, string bstrPrimaryID, string bstrSecondaryID) {
            this.DeassociateAllAsync(lApplicationID, lResourceID, lResourceType, bstrPrimaryID, bstrSecondaryID, null);
        }
        
        /// <remarks/>
        public void DeassociateAllAsync(int lApplicationID, int lResourceID, int lResourceType, string bstrPrimaryID, string bstrSecondaryID, object userState) {
            if ((this.DeassociateAllOperationCompleted == null)) {
                this.DeassociateAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeassociateAllOperationCompleted);
            }
            this.InvokeAsync("DeassociateAll", new object[] {
                        lApplicationID,
                        lResourceID,
                        lResourceType,
                        bstrPrimaryID,
                        bstrSecondaryID}, this.DeassociateAllOperationCompleted, userState);
        }
        
        private void OnDeassociateAllOperationCompleted(object arg) {
            if ((this.DeassociateAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeassociateAllCompleted(this, new DeassociateAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#RevokeType", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public short RevokeType(int lApplicationID, string bstrPrimaryID, string bstrSecondaryID, out string pbstrError) {
            object[] results = this.Invoke("RevokeType", new object[] {
                        lApplicationID,
                        bstrPrimaryID,
                        bstrSecondaryID});
            pbstrError = ((string)(results[1]));
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public void RevokeTypeAsync(int lApplicationID, string bstrPrimaryID, string bstrSecondaryID) {
            this.RevokeTypeAsync(lApplicationID, bstrPrimaryID, bstrSecondaryID, null);
        }
        
        /// <remarks/>
        public void RevokeTypeAsync(int lApplicationID, string bstrPrimaryID, string bstrSecondaryID, object userState) {
            if ((this.RevokeTypeOperationCompleted == null)) {
                this.RevokeTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRevokeTypeOperationCompleted);
            }
            this.InvokeAsync("RevokeType", new object[] {
                        lApplicationID,
                        bstrPrimaryID,
                        bstrSecondaryID}, this.RevokeTypeOperationCompleted, userState);
        }
        
        private void OnRevokeTypeOperationCompleted(object arg) {
            if ((this.RevokeTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RevokeTypeCompleted(this, new RevokeTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#RevokeAll", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public short RevokeAll(string bstrPrimaryID, string bstrSecondaryID, out string pbstrError) {
            object[] results = this.Invoke("RevokeAll", new object[] {
                        bstrPrimaryID,
                        bstrSecondaryID});
            pbstrError = ((string)(results[1]));
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public void RevokeAllAsync(string bstrPrimaryID, string bstrSecondaryID) {
            this.RevokeAllAsync(bstrPrimaryID, bstrSecondaryID, null);
        }
        
        /// <remarks/>
        public void RevokeAllAsync(string bstrPrimaryID, string bstrSecondaryID, object userState) {
            if ((this.RevokeAllOperationCompleted == null)) {
                this.RevokeAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRevokeAllOperationCompleted);
            }
            this.InvokeAsync("RevokeAll", new object[] {
                        bstrPrimaryID,
                        bstrSecondaryID}, this.RevokeAllOperationCompleted, userState);
        }
        
        private void OnRevokeAllOperationCompleted(object arg) {
            if ((this.RevokeAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RevokeAllCompleted(this, new RevokeAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetTrustedShoppers", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetTrustedShoppers(string bstrPrimaryID, out string pbstrError) {
            object[] results = this.Invoke("GetTrustedShoppers", new object[] {
                        bstrPrimaryID});
            pbstrError = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrustedShoppersAsync(string bstrPrimaryID) {
            this.GetTrustedShoppersAsync(bstrPrimaryID, null);
        }
        
        /// <remarks/>
        public void GetTrustedShoppersAsync(string bstrPrimaryID, object userState) {
            if ((this.GetTrustedShoppersOperationCompleted == null)) {
                this.GetTrustedShoppersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrustedShoppersOperationCompleted);
            }
            this.InvokeAsync("GetTrustedShoppers", new object[] {
                        bstrPrimaryID}, this.GetTrustedShoppersOperationCompleted, userState);
        }
        
        private void OnGetTrustedShoppersOperationCompleted(object arg) {
            if ((this.GetTrustedShoppersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrustedShoppersCompleted(this, new GetTrustedShoppersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetDelegatedResources", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetDelegatedResources(int lApplicationID, string bstrSecondaryID, int lPageNo, int lRowsPerPage, out string pbstrError) {
            object[] results = this.Invoke("GetDelegatedResources", new object[] {
                        lApplicationID,
                        bstrSecondaryID,
                        lPageNo,
                        lRowsPerPage});
            pbstrError = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDelegatedResourcesAsync(int lApplicationID, string bstrSecondaryID, int lPageNo, int lRowsPerPage) {
            this.GetDelegatedResourcesAsync(lApplicationID, bstrSecondaryID, lPageNo, lRowsPerPage, null);
        }
        
        /// <remarks/>
        public void GetDelegatedResourcesAsync(int lApplicationID, string bstrSecondaryID, int lPageNo, int lRowsPerPage, object userState) {
            if ((this.GetDelegatedResourcesOperationCompleted == null)) {
                this.GetDelegatedResourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDelegatedResourcesOperationCompleted);
            }
            this.InvokeAsync("GetDelegatedResources", new object[] {
                        lApplicationID,
                        bstrSecondaryID,
                        lPageNo,
                        lRowsPerPage}, this.GetDelegatedResourcesOperationCompleted, userState);
        }
        
        private void OnGetDelegatedResourcesOperationCompleted(object arg) {
            if ((this.GetDelegatedResourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDelegatedResourcesCompleted(this, new GetDelegatedResourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetDelegatedRoles", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetDelegatedRoles(int lApplicationID, int lResourceID, int lResourceType, string bstrSecondaryID, out string pbstrError) {
            object[] results = this.Invoke("GetDelegatedRoles", new object[] {
                        lApplicationID,
                        lResourceID,
                        lResourceType,
                        bstrSecondaryID});
            pbstrError = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDelegatedRolesAsync(int lApplicationID, int lResourceID, int lResourceType, string bstrSecondaryID) {
            this.GetDelegatedRolesAsync(lApplicationID, lResourceID, lResourceType, bstrSecondaryID, null);
        }
        
        /// <remarks/>
        public void GetDelegatedRolesAsync(int lApplicationID, int lResourceID, int lResourceType, string bstrSecondaryID, object userState) {
            if ((this.GetDelegatedRolesOperationCompleted == null)) {
                this.GetDelegatedRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDelegatedRolesOperationCompleted);
            }
            this.InvokeAsync("GetDelegatedRoles", new object[] {
                        lApplicationID,
                        lResourceID,
                        lResourceType,
                        bstrSecondaryID}, this.GetDelegatedRolesOperationCompleted, userState);
        }
        
        private void OnGetDelegatedRolesOperationCompleted(object arg) {
            if ((this.GetDelegatedRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDelegatedRolesCompleted(this, new GetDelegatedRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetManagedResources", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetManagedResources(int lApplicationID, string bstrPrimaryID, int lPageNo, int lRowsPerPage, out string pbstrError) {
            object[] results = this.Invoke("GetManagedResources", new object[] {
                        lApplicationID,
                        bstrPrimaryID,
                        lPageNo,
                        lRowsPerPage});
            pbstrError = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetManagedResourcesAsync(int lApplicationID, string bstrPrimaryID, int lPageNo, int lRowsPerPage) {
            this.GetManagedResourcesAsync(lApplicationID, bstrPrimaryID, lPageNo, lRowsPerPage, null);
        }
        
        /// <remarks/>
        public void GetManagedResourcesAsync(int lApplicationID, string bstrPrimaryID, int lPageNo, int lRowsPerPage, object userState) {
            if ((this.GetManagedResourcesOperationCompleted == null)) {
                this.GetManagedResourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetManagedResourcesOperationCompleted);
            }
            this.InvokeAsync("GetManagedResources", new object[] {
                        lApplicationID,
                        bstrPrimaryID,
                        lPageNo,
                        lRowsPerPage}, this.GetManagedResourcesOperationCompleted, userState);
        }
        
        private void OnGetManagedResourcesOperationCompleted(object arg) {
            if ((this.GetManagedResourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetManagedResourcesCompleted(this, new GetManagedResourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetManagedResourcesByShopper", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetManagedResourcesByShopper(int lApplicationID, string bstrPrimaryID, string bstrSecondaryID, int lPageNo, int lRowsPerPage, out string pbstrError) {
            object[] results = this.Invoke("GetManagedResourcesByShopper", new object[] {
                        lApplicationID,
                        bstrPrimaryID,
                        bstrSecondaryID,
                        lPageNo,
                        lRowsPerPage});
            pbstrError = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetManagedResourcesByShopperAsync(int lApplicationID, string bstrPrimaryID, string bstrSecondaryID, int lPageNo, int lRowsPerPage) {
            this.GetManagedResourcesByShopperAsync(lApplicationID, bstrPrimaryID, bstrSecondaryID, lPageNo, lRowsPerPage, null);
        }
        
        /// <remarks/>
        public void GetManagedResourcesByShopperAsync(int lApplicationID, string bstrPrimaryID, string bstrSecondaryID, int lPageNo, int lRowsPerPage, object userState) {
            if ((this.GetManagedResourcesByShopperOperationCompleted == null)) {
                this.GetManagedResourcesByShopperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetManagedResourcesByShopperOperationCompleted);
            }
            this.InvokeAsync("GetManagedResourcesByShopper", new object[] {
                        lApplicationID,
                        bstrPrimaryID,
                        bstrSecondaryID,
                        lPageNo,
                        lRowsPerPage}, this.GetManagedResourcesByShopperOperationCompleted, userState);
        }
        
        private void OnGetManagedResourcesByShopperOperationCompleted(object arg) {
            if ((this.GetManagedResourcesByShopperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetManagedResourcesByShopperCompleted(this, new GetManagedResourcesByShopperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetDelegatesByResource", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetDelegatesByResource(int lApplicationID, string bstrPrimaryID, int lResourceID, int lResourceType, out string pbstrError) {
            object[] results = this.Invoke("GetDelegatesByResource", new object[] {
                        lApplicationID,
                        bstrPrimaryID,
                        lResourceID,
                        lResourceType});
            pbstrError = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDelegatesByResourceAsync(int lApplicationID, string bstrPrimaryID, int lResourceID, int lResourceType) {
            this.GetDelegatesByResourceAsync(lApplicationID, bstrPrimaryID, lResourceID, lResourceType, null);
        }
        
        /// <remarks/>
        public void GetDelegatesByResourceAsync(int lApplicationID, string bstrPrimaryID, int lResourceID, int lResourceType, object userState) {
            if ((this.GetDelegatesByResourceOperationCompleted == null)) {
                this.GetDelegatesByResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDelegatesByResourceOperationCompleted);
            }
            this.InvokeAsync("GetDelegatesByResource", new object[] {
                        lApplicationID,
                        bstrPrimaryID,
                        lResourceID,
                        lResourceType}, this.GetDelegatesByResourceOperationCompleted, userState);
        }
        
        private void OnGetDelegatesByResourceOperationCompleted(object arg) {
            if ((this.GetDelegatesByResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDelegatesByResourceCompleted(this, new GetDelegatesByResourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#AssociateList", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public short AssociateList(int lApplicationID, int lResourceID, int lResourceType, string bstrRoleList, string bstrPrimaryID, string bstrSecondaryID, out string pbstrError) {
            object[] results = this.Invoke("AssociateList", new object[] {
                        lApplicationID,
                        lResourceID,
                        lResourceType,
                        bstrRoleList,
                        bstrPrimaryID,
                        bstrSecondaryID});
            pbstrError = ((string)(results[1]));
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public void AssociateListAsync(int lApplicationID, int lResourceID, int lResourceType, string bstrRoleList, string bstrPrimaryID, string bstrSecondaryID) {
            this.AssociateListAsync(lApplicationID, lResourceID, lResourceType, bstrRoleList, bstrPrimaryID, bstrSecondaryID, null);
        }
        
        /// <remarks/>
        public void AssociateListAsync(int lApplicationID, int lResourceID, int lResourceType, string bstrRoleList, string bstrPrimaryID, string bstrSecondaryID, object userState) {
            if ((this.AssociateListOperationCompleted == null)) {
                this.AssociateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssociateListOperationCompleted);
            }
            this.InvokeAsync("AssociateList", new object[] {
                        lApplicationID,
                        lResourceID,
                        lResourceType,
                        bstrRoleList,
                        bstrPrimaryID,
                        bstrSecondaryID}, this.AssociateListOperationCompleted, userState);
        }
        
        private void OnAssociateListOperationCompleted(object arg) {
            if ((this.AssociateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssociateListCompleted(this, new AssociateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#ClearAndAssociate", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public short ClearAndAssociate(int lApplicationID, int lResourceID, int lResourceType, string bstrRoleList, string bstrPrimaryID, string bstrSecondaryID, out string pbstrError) {
            object[] results = this.Invoke("ClearAndAssociate", new object[] {
                        lApplicationID,
                        lResourceID,
                        lResourceType,
                        bstrRoleList,
                        bstrPrimaryID,
                        bstrSecondaryID});
            pbstrError = ((string)(results[1]));
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public void ClearAndAssociateAsync(int lApplicationID, int lResourceID, int lResourceType, string bstrRoleList, string bstrPrimaryID, string bstrSecondaryID) {
            this.ClearAndAssociateAsync(lApplicationID, lResourceID, lResourceType, bstrRoleList, bstrPrimaryID, bstrSecondaryID, null);
        }
        
        /// <remarks/>
        public void ClearAndAssociateAsync(int lApplicationID, int lResourceID, int lResourceType, string bstrRoleList, string bstrPrimaryID, string bstrSecondaryID, object userState) {
            if ((this.ClearAndAssociateOperationCompleted == null)) {
                this.ClearAndAssociateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearAndAssociateOperationCompleted);
            }
            this.InvokeAsync("ClearAndAssociate", new object[] {
                        lApplicationID,
                        lResourceID,
                        lResourceType,
                        bstrRoleList,
                        bstrPrimaryID,
                        bstrSecondaryID}, this.ClearAndAssociateOperationCompleted, userState);
        }
        
        private void OnClearAndAssociateOperationCompleted(object arg) {
            if ((this.ClearAndAssociateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearAndAssociateCompleted(this, new ClearAndAssociateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#RemoveTrustedShopper", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public short RemoveTrustedShopper(string bstrPrimaryID, string bstrSecondaryID, out string pbstrError) {
            object[] results = this.Invoke("RemoveTrustedShopper", new object[] {
                        bstrPrimaryID,
                        bstrSecondaryID});
            pbstrError = ((string)(results[1]));
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveTrustedShopperAsync(string bstrPrimaryID, string bstrSecondaryID) {
            this.RemoveTrustedShopperAsync(bstrPrimaryID, bstrSecondaryID, null);
        }
        
        /// <remarks/>
        public void RemoveTrustedShopperAsync(string bstrPrimaryID, string bstrSecondaryID, object userState) {
            if ((this.RemoveTrustedShopperOperationCompleted == null)) {
                this.RemoveTrustedShopperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveTrustedShopperOperationCompleted);
            }
            this.InvokeAsync("RemoveTrustedShopper", new object[] {
                        bstrPrimaryID,
                        bstrSecondaryID}, this.RemoveTrustedShopperOperationCompleted, userState);
        }
        
        private void OnRemoveTrustedShopperOperationCompleted(object arg) {
            if ((this.RemoveTrustedShopperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveTrustedShopperCompleted(this, new RemoveTrustedShopperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#RemoveByResource", RequestNamespace="urn:WSgdCarmaService", ResponseNamespace="urn:WSgdCarmaService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public short RemoveByResource(int lApplicationID, string bstrPrimaryID, int lResourceID, int lResourceType, out string pbstrError) {
            object[] results = this.Invoke("RemoveByResource", new object[] {
                        lApplicationID,
                        bstrPrimaryID,
                        lResourceID,
                        lResourceType});
            pbstrError = ((string)(results[1]));
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveByResourceAsync(int lApplicationID, string bstrPrimaryID, int lResourceID, int lResourceType) {
            this.RemoveByResourceAsync(lApplicationID, bstrPrimaryID, lResourceID, lResourceType, null);
        }
        
        /// <remarks/>
        public void RemoveByResourceAsync(int lApplicationID, string bstrPrimaryID, int lResourceID, int lResourceType, object userState) {
            if ((this.RemoveByResourceOperationCompleted == null)) {
                this.RemoveByResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveByResourceOperationCompleted);
            }
            this.InvokeAsync("RemoveByResource", new object[] {
                        lApplicationID,
                        bstrPrimaryID,
                        lResourceID,
                        lResourceType}, this.RemoveByResourceOperationCompleted, userState);
        }
        
        private void OnRemoveByResourceOperationCompleted(object arg) {
            if ((this.RemoveByResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveByResourceCompleted(this, new RemoveByResourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendInvitationCompletedEventHandler(object sender, SendInvitationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendInvitationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendInvitationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public short Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateRoleCompletedEventHandler(object sender, CreateRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateRoleDataCompletedEventHandler(object sender, UpdateRoleDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRoleDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRoleDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public short Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRolesCompletedEventHandler(object sender, GetRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeprecateRoleCompletedEventHandler(object sender, DeprecateRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeprecateRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeprecateRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public short Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AssociateCompletedEventHandler(object sender, AssociateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssociateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssociateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public short Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeassociateCompletedEventHandler(object sender, DeassociateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeassociateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeassociateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public short Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeassociateAllCompletedEventHandler(object sender, DeassociateAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeassociateAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeassociateAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public short Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RevokeTypeCompletedEventHandler(object sender, RevokeTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RevokeTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RevokeTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public short Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RevokeAllCompletedEventHandler(object sender, RevokeAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RevokeAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RevokeAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public short Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTrustedShoppersCompletedEventHandler(object sender, GetTrustedShoppersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrustedShoppersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrustedShoppersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDelegatedResourcesCompletedEventHandler(object sender, GetDelegatedResourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDelegatedResourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDelegatedResourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDelegatedRolesCompletedEventHandler(object sender, GetDelegatedRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDelegatedRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDelegatedRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetManagedResourcesCompletedEventHandler(object sender, GetManagedResourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetManagedResourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetManagedResourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetManagedResourcesByShopperCompletedEventHandler(object sender, GetManagedResourcesByShopperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetManagedResourcesByShopperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetManagedResourcesByShopperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDelegatesByResourceCompletedEventHandler(object sender, GetDelegatesByResourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDelegatesByResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDelegatesByResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AssociateListCompletedEventHandler(object sender, AssociateListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssociateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssociateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public short Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ClearAndAssociateCompletedEventHandler(object sender, ClearAndAssociateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearAndAssociateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearAndAssociateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public short Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveTrustedShopperCompletedEventHandler(object sender, RemoveTrustedShopperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveTrustedShopperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveTrustedShopperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public short Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveByResourceCompletedEventHandler(object sender, RemoveByResourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveByResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveByResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public short Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((short)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591