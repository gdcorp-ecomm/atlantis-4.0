//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17379.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.CertifiedSiteSeal.Impl.CertifiedDomainsWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17379")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CDWhoisWebSvcSoap", Namespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebServiceResponseBase))]
    public partial class CDWhoisWebSvc : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback WebSvcHealthCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback WhoisChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessDomainEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteSealHtmlForAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteSealHtmlForAccountAndSealTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteSealHtmlForDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteSealHtmlForDomainAndSealTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessShopperChangeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CDWhoisWebSvc() {
            this.Url = global::Atlantis.Framework.CertifiedSiteSeal.Impl.Properties.Settings.Default.Atlantis_Framework_CertifiedSiteSeal_Impl_CertifiedDomainsWS_CDWhoisWebSvc;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event WebSvcHealthCheckCompletedEventHandler WebSvcHealthCheckCompleted;
        
        /// <remarks/>
        public event WhoisChangedCompletedEventHandler WhoisChangedCompleted;
        
        /// <remarks/>
        public event ProcessDomainEventCompletedEventHandler ProcessDomainEventCompleted;
        
        /// <remarks/>
        public event GetSiteSealHtmlForAccountCompletedEventHandler GetSiteSealHtmlForAccountCompleted;
        
        /// <remarks/>
        public event GetSiteSealHtmlForAccountAndSealTypeCompletedEventHandler GetSiteSealHtmlForAccountAndSealTypeCompleted;
        
        /// <remarks/>
        public event GetSiteSealHtmlForDomainCompletedEventHandler GetSiteSealHtmlForDomainCompleted;
        
        /// <remarks/>
        public event GetSiteSealHtmlForDomainAndSealTypeCompletedEventHandler GetSiteSealHtmlForDomainAndSealTypeCompleted;
        
        /// <remarks/>
        public event ProcessShopperChangeCompletedEventHandler ProcessShopperChangeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc/WebSvcHealthC" +
            "heck", RequestNamespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc", ResponseNamespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StandardResults WebSvcHealthCheck(string callingApplicationName) {
            object[] results = this.Invoke("WebSvcHealthCheck", new object[] {
                        callingApplicationName});
            return ((StandardResults)(results[0]));
        }
        
        /// <remarks/>
        public void WebSvcHealthCheckAsync(string callingApplicationName) {
            this.WebSvcHealthCheckAsync(callingApplicationName, null);
        }
        
        /// <remarks/>
        public void WebSvcHealthCheckAsync(string callingApplicationName, object userState) {
            if ((this.WebSvcHealthCheckOperationCompleted == null)) {
                this.WebSvcHealthCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebSvcHealthCheckOperationCompleted);
            }
            this.InvokeAsync("WebSvcHealthCheck", new object[] {
                        callingApplicationName}, this.WebSvcHealthCheckOperationCompleted, userState);
        }
        
        private void OnWebSvcHealthCheckOperationCompleted(object arg) {
            if ((this.WebSvcHealthCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebSvcHealthCheckCompleted(this, new WebSvcHealthCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc/WhoisChanged", RequestNamespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc", ResponseNamespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StandardResults WhoisChanged(string callingApplicationName, string domainName) {
            object[] results = this.Invoke("WhoisChanged", new object[] {
                        callingApplicationName,
                        domainName});
            return ((StandardResults)(results[0]));
        }
        
        /// <remarks/>
        public void WhoisChangedAsync(string callingApplicationName, string domainName) {
            this.WhoisChangedAsync(callingApplicationName, domainName, null);
        }
        
        /// <remarks/>
        public void WhoisChangedAsync(string callingApplicationName, string domainName, object userState) {
            if ((this.WhoisChangedOperationCompleted == null)) {
                this.WhoisChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWhoisChangedOperationCompleted);
            }
            this.InvokeAsync("WhoisChanged", new object[] {
                        callingApplicationName,
                        domainName}, this.WhoisChangedOperationCompleted, userState);
        }
        
        private void OnWhoisChangedOperationCompleted(object arg) {
            if ((this.WhoisChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WhoisChangedCompleted(this, new WhoisChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc/ProcessDomain" +
            "Event", RequestNamespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc", ResponseNamespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StandardResults ProcessDomainEvent(string callingApplicationName, string shopperId, string domainName, string eventCode) {
            object[] results = this.Invoke("ProcessDomainEvent", new object[] {
                        callingApplicationName,
                        shopperId,
                        domainName,
                        eventCode});
            return ((StandardResults)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessDomainEventAsync(string callingApplicationName, string shopperId, string domainName, string eventCode) {
            this.ProcessDomainEventAsync(callingApplicationName, shopperId, domainName, eventCode, null);
        }
        
        /// <remarks/>
        public void ProcessDomainEventAsync(string callingApplicationName, string shopperId, string domainName, string eventCode, object userState) {
            if ((this.ProcessDomainEventOperationCompleted == null)) {
                this.ProcessDomainEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessDomainEventOperationCompleted);
            }
            this.InvokeAsync("ProcessDomainEvent", new object[] {
                        callingApplicationName,
                        shopperId,
                        domainName,
                        eventCode}, this.ProcessDomainEventOperationCompleted, userState);
        }
        
        private void OnProcessDomainEventOperationCompleted(object arg) {
            if ((this.ProcessDomainEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessDomainEventCompleted(this, new ProcessDomainEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc/GetSiteSealHt" +
            "mlForAccount", RequestNamespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc", ResponseNamespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StringResults GetSiteSealHtmlForAccount(string callingApplicationName, string accountUid) {
            object[] results = this.Invoke("GetSiteSealHtmlForAccount", new object[] {
                        callingApplicationName,
                        accountUid});
            return ((StringResults)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteSealHtmlForAccountAsync(string callingApplicationName, string accountUid) {
            this.GetSiteSealHtmlForAccountAsync(callingApplicationName, accountUid, null);
        }
        
        /// <remarks/>
        public void GetSiteSealHtmlForAccountAsync(string callingApplicationName, string accountUid, object userState) {
            if ((this.GetSiteSealHtmlForAccountOperationCompleted == null)) {
                this.GetSiteSealHtmlForAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteSealHtmlForAccountOperationCompleted);
            }
            this.InvokeAsync("GetSiteSealHtmlForAccount", new object[] {
                        callingApplicationName,
                        accountUid}, this.GetSiteSealHtmlForAccountOperationCompleted, userState);
        }
        
        private void OnGetSiteSealHtmlForAccountOperationCompleted(object arg) {
            if ((this.GetSiteSealHtmlForAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteSealHtmlForAccountCompleted(this, new GetSiteSealHtmlForAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc/GetSiteSealHt" +
            "mlForAccountAndSealType", RequestNamespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc", ResponseNamespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StringResults GetSiteSealHtmlForAccountAndSealType(string callingApplicationName, string accountUid, string sealType) {
            object[] results = this.Invoke("GetSiteSealHtmlForAccountAndSealType", new object[] {
                        callingApplicationName,
                        accountUid,
                        sealType});
            return ((StringResults)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteSealHtmlForAccountAndSealTypeAsync(string callingApplicationName, string accountUid, string sealType) {
            this.GetSiteSealHtmlForAccountAndSealTypeAsync(callingApplicationName, accountUid, sealType, null);
        }
        
        /// <remarks/>
        public void GetSiteSealHtmlForAccountAndSealTypeAsync(string callingApplicationName, string accountUid, string sealType, object userState) {
            if ((this.GetSiteSealHtmlForAccountAndSealTypeOperationCompleted == null)) {
                this.GetSiteSealHtmlForAccountAndSealTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteSealHtmlForAccountAndSealTypeOperationCompleted);
            }
            this.InvokeAsync("GetSiteSealHtmlForAccountAndSealType", new object[] {
                        callingApplicationName,
                        accountUid,
                        sealType}, this.GetSiteSealHtmlForAccountAndSealTypeOperationCompleted, userState);
        }
        
        private void OnGetSiteSealHtmlForAccountAndSealTypeOperationCompleted(object arg) {
            if ((this.GetSiteSealHtmlForAccountAndSealTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteSealHtmlForAccountAndSealTypeCompleted(this, new GetSiteSealHtmlForAccountAndSealTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc/GetSiteSealHt" +
            "mlForDomain", RequestNamespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc", ResponseNamespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StringResults GetSiteSealHtmlForDomain(string callingApplicationName, string domainName) {
            object[] results = this.Invoke("GetSiteSealHtmlForDomain", new object[] {
                        callingApplicationName,
                        domainName});
            return ((StringResults)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteSealHtmlForDomainAsync(string callingApplicationName, string domainName) {
            this.GetSiteSealHtmlForDomainAsync(callingApplicationName, domainName, null);
        }
        
        /// <remarks/>
        public void GetSiteSealHtmlForDomainAsync(string callingApplicationName, string domainName, object userState) {
            if ((this.GetSiteSealHtmlForDomainOperationCompleted == null)) {
                this.GetSiteSealHtmlForDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteSealHtmlForDomainOperationCompleted);
            }
            this.InvokeAsync("GetSiteSealHtmlForDomain", new object[] {
                        callingApplicationName,
                        domainName}, this.GetSiteSealHtmlForDomainOperationCompleted, userState);
        }
        
        private void OnGetSiteSealHtmlForDomainOperationCompleted(object arg) {
            if ((this.GetSiteSealHtmlForDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteSealHtmlForDomainCompleted(this, new GetSiteSealHtmlForDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc/GetSiteSealHt" +
            "mlForDomainAndSealType", RequestNamespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc", ResponseNamespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StringResults GetSiteSealHtmlForDomainAndSealType(string callingApplicationName, string domainName, string sealType) {
            object[] results = this.Invoke("GetSiteSealHtmlForDomainAndSealType", new object[] {
                        callingApplicationName,
                        domainName,
                        sealType});
            return ((StringResults)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteSealHtmlForDomainAndSealTypeAsync(string callingApplicationName, string domainName, string sealType) {
            this.GetSiteSealHtmlForDomainAndSealTypeAsync(callingApplicationName, domainName, sealType, null);
        }
        
        /// <remarks/>
        public void GetSiteSealHtmlForDomainAndSealTypeAsync(string callingApplicationName, string domainName, string sealType, object userState) {
            if ((this.GetSiteSealHtmlForDomainAndSealTypeOperationCompleted == null)) {
                this.GetSiteSealHtmlForDomainAndSealTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteSealHtmlForDomainAndSealTypeOperationCompleted);
            }
            this.InvokeAsync("GetSiteSealHtmlForDomainAndSealType", new object[] {
                        callingApplicationName,
                        domainName,
                        sealType}, this.GetSiteSealHtmlForDomainAndSealTypeOperationCompleted, userState);
        }
        
        private void OnGetSiteSealHtmlForDomainAndSealTypeOperationCompleted(object arg) {
            if ((this.GetSiteSealHtmlForDomainAndSealTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteSealHtmlForDomainAndSealTypeCompleted(this, new GetSiteSealHtmlForDomainAndSealTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc/ProcessShoppe" +
            "rChange", RequestNamespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc", ResponseNamespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StandardResults ProcessShopperChange(string callingApplicationName, long domainId, int oldResellerId, string oldShopperId, int newResellerId, string newShopperId) {
            object[] results = this.Invoke("ProcessShopperChange", new object[] {
                        callingApplicationName,
                        domainId,
                        oldResellerId,
                        oldShopperId,
                        newResellerId,
                        newShopperId});
            return ((StandardResults)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessShopperChangeAsync(string callingApplicationName, long domainId, int oldResellerId, string oldShopperId, int newResellerId, string newShopperId) {
            this.ProcessShopperChangeAsync(callingApplicationName, domainId, oldResellerId, oldShopperId, newResellerId, newShopperId, null);
        }
        
        /// <remarks/>
        public void ProcessShopperChangeAsync(string callingApplicationName, long domainId, int oldResellerId, string oldShopperId, int newResellerId, string newShopperId, object userState) {
            if ((this.ProcessShopperChangeOperationCompleted == null)) {
                this.ProcessShopperChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessShopperChangeOperationCompleted);
            }
            this.InvokeAsync("ProcessShopperChange", new object[] {
                        callingApplicationName,
                        domainId,
                        oldResellerId,
                        oldShopperId,
                        newResellerId,
                        newShopperId}, this.ProcessShopperChangeOperationCompleted, userState);
        }
        
        private void OnProcessShopperChangeOperationCompleted(object arg) {
            if ((this.ProcessShopperChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessShopperChangeCompleted(this, new ProcessShopperChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17379")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc")]
    public partial class StandardResults : WebServiceResponseBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StringResults))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StandardResults))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17379")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc")]
    public abstract partial class WebServiceResponseBase {
        
        private string serverField;
        
        private ProcessingResults statusField;
        
        private WebServiceError errorField;
        
        /// <remarks/>
        public string Server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
            }
        }
        
        /// <remarks/>
        public ProcessingResults Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public WebServiceError Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17379")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc")]
    public enum ProcessingResults {
        
        /// <remarks/>
        UNDEFINED,
        
        /// <remarks/>
        NOTFOUND,
        
        /// <remarks/>
        SUCCESS,
        
        /// <remarks/>
        ERROR,
        
        /// <remarks/>
        FATAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17379")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc")]
    public partial class WebServiceError {
        
        private WebServiceErrorCode codeField;
        
        private string messageField;
        
        private string detailField;
        
        /// <remarks/>
        public WebServiceErrorCode Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                return this.detailField;
            }
            set {
                this.detailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17379")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc")]
    public enum WebServiceErrorCode {
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        VALUE_NOT_FOUND,
        
        /// <remarks/>
        REQUEST_IN_USE,
        
        /// <remarks/>
        CREDIT_NOT_FOUND,
        
        /// <remarks/>
        REQUEST_ALREADY_EXISTS,
        
        /// <remarks/>
        VALIDATION_DOMAIN_NAME,
        
        /// <remarks/>
        VALIDATION_PHONE_DELAY,
        
        /// <remarks/>
        QUEUED_REQUEST_EXCEPTION,
        
        /// <remarks/>
        NO_SUCH_REQUEST,
        
        /// <remarks/>
        UNAVAILABLE_OPERATION,
        
        /// <remarks/>
        MESSAGING_FAILURE,
        
        /// <remarks/>
        TELEVERIFY_INVALID_LANGUAGE,
        
        /// <remarks/>
        TELEVERIFY_OVER_QUOTA,
        
        /// <remarks/>
        TELEVERIFY_OVER_DAILY_LIMIT,
        
        /// <remarks/>
        TELEVERIFY_INVALID_VOIP_NUMBER,
        
        /// <remarks/>
        TELEVERIFY_INVALID_EXTENSION,
        
        /// <remarks/>
        TELEVERIFY_INVALID_PIN,
        
        /// <remarks/>
        TELEVERIFY_WEBSERVICE_ERROR,
        
        /// <remarks/>
        TELEVERIFY_UNKNOWN_ERROR,
        
        /// <remarks/>
        WHOIS_DATA_INCONSISTENT,
        
        /// <remarks/>
        WHOIS_CONTACT_NOT_FOUND,
        
        /// <remarks/>
        REMOTE_EXCEPTION,
        
        /// <remarks/>
        TOO_MANY_RESULTS,
        
        /// <remarks/>
        REGISTRATION_SYSTEM_FAILURE,
        
        /// <remarks/>
        NUMBER_FORMAT_ERROR,
        
        /// <remarks/>
        ORION_ERROR,
        
        /// <remarks/>
        HIBERNATE_STALE_OBJECT_STATE,
        
        /// <remarks/>
        CREDITLESS_CONSUMED_CREDIT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17379")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://starfieldtech.com/webservices/CertifiedDomains/CDWhoisWebSvc")]
    public partial class StringResults : WebServiceResponseBase {
        
        private string resultsField;
        
        /// <remarks/>
        public string Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17379")]
    public delegate void WebSvcHealthCheckCompletedEventHandler(object sender, WebSvcHealthCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17379")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WebSvcHealthCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WebSvcHealthCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StandardResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StandardResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17379")]
    public delegate void WhoisChangedCompletedEventHandler(object sender, WhoisChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17379")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WhoisChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WhoisChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StandardResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StandardResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17379")]
    public delegate void ProcessDomainEventCompletedEventHandler(object sender, ProcessDomainEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17379")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessDomainEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessDomainEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StandardResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StandardResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17379")]
    public delegate void GetSiteSealHtmlForAccountCompletedEventHandler(object sender, GetSiteSealHtmlForAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17379")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteSealHtmlForAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteSealHtmlForAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StringResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StringResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17379")]
    public delegate void GetSiteSealHtmlForAccountAndSealTypeCompletedEventHandler(object sender, GetSiteSealHtmlForAccountAndSealTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17379")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteSealHtmlForAccountAndSealTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteSealHtmlForAccountAndSealTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StringResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StringResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17379")]
    public delegate void GetSiteSealHtmlForDomainCompletedEventHandler(object sender, GetSiteSealHtmlForDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17379")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteSealHtmlForDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteSealHtmlForDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StringResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StringResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17379")]
    public delegate void GetSiteSealHtmlForDomainAndSealTypeCompletedEventHandler(object sender, GetSiteSealHtmlForDomainAndSealTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17379")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteSealHtmlForDomainAndSealTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteSealHtmlForDomainAndSealTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StringResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StringResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17379")]
    public delegate void ProcessShopperChangeCompletedEventHandler(object sender, ProcessShopperChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17379")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessShopperChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessShopperChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StandardResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StandardResults)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591