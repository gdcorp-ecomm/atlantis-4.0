//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.ECCGetShopperByEmailAddress.Impl.eccWs {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="/Binding", Namespace="ECCEmailInfoNS")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AddressListEntry))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(EmailAddressListInfoSmall))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(EmailAddressListInfo))]
    public partial class Item : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback createEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActiveAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAuthRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPodServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateAuthRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUnlimitedEmailDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateUnlimitedEmailDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeUnlimitedEmailDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUnlimitedEmailSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateUnlimitedEmailSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeUnlimitedEmailSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUnlimitedEmailHistOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateUnlimitedEmailHistOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeUnlimitedEmailHistOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getResellerIdByDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountListByShopperIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDomainStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInfoByEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAddressInfoByDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAddressInfoByShopperIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAddressInfoSmallByShopperIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback createEmailActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendWelcomeEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFullAddressListByShopperIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSpamFilterSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAddressListByShopperIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAddressListByDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAddressListByPlanUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback setStatusByEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback setStatusByDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback getShopperIdByEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback getResellerIdByEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSMTPRelayUIDsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Item() {
            this.Url = global::Atlantis.Framework.ECCGetShopperByEmailAddress.Impl.Properties.Settings.Default.Atlantis_Framework_ECCGetShopperByEmailAddress_Impl_com_stgwbe_devlhvm03_ecc__;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event createEmailAddressCompletedEventHandler createEmailAddressCompleted;
        
        /// <remarks/>
        public event getActiveAccountsCompletedEventHandler getActiveAccountsCompleted;
        
        /// <remarks/>
        public event getAuthRecCompletedEventHandler getAuthRecCompleted;
        
        /// <remarks/>
        public event getPodServiceCompletedEventHandler getPodServiceCompleted;
        
        /// <remarks/>
        public event updateAuthRecCompletedEventHandler updateAuthRecCompleted;
        
        /// <remarks/>
        public event getUnlimitedEmailDetailsCompletedEventHandler getUnlimitedEmailDetailsCompleted;
        
        /// <remarks/>
        public event updateUnlimitedEmailDetailsCompletedEventHandler updateUnlimitedEmailDetailsCompleted;
        
        /// <remarks/>
        public event removeUnlimitedEmailDetailsCompletedEventHandler removeUnlimitedEmailDetailsCompleted;
        
        /// <remarks/>
        public event getUnlimitedEmailSettingsCompletedEventHandler getUnlimitedEmailSettingsCompleted;
        
        /// <remarks/>
        public event updateUnlimitedEmailSettingsCompletedEventHandler updateUnlimitedEmailSettingsCompleted;
        
        /// <remarks/>
        public event removeUnlimitedEmailSettingsCompletedEventHandler removeUnlimitedEmailSettingsCompleted;
        
        /// <remarks/>
        public event getUnlimitedEmailHistCompletedEventHandler getUnlimitedEmailHistCompleted;
        
        /// <remarks/>
        public event updateUnlimitedEmailHistCompletedEventHandler updateUnlimitedEmailHistCompleted;
        
        /// <remarks/>
        public event removeUnlimitedEmailHistCompletedEventHandler removeUnlimitedEmailHistCompleted;
        
        /// <remarks/>
        public event getInfoCompletedEventHandler getInfoCompleted;
        
        /// <remarks/>
        public event getResellerIdByDomainCompletedEventHandler getResellerIdByDomainCompleted;
        
        /// <remarks/>
        public event getAccountListByShopperIdCompletedEventHandler getAccountListByShopperIdCompleted;
        
        /// <remarks/>
        public event getDomainStatusCompletedEventHandler getDomainStatusCompleted;
        
        /// <remarks/>
        public event getInfoByEmailAddressCompletedEventHandler getInfoByEmailAddressCompleted;
        
        /// <remarks/>
        public event getAddressInfoByDomainCompletedEventHandler getAddressInfoByDomainCompleted;
        
        /// <remarks/>
        public event getAddressInfoByShopperIdCompletedEventHandler getAddressInfoByShopperIdCompleted;
        
        /// <remarks/>
        public event getAddressInfoSmallByShopperIdCompletedEventHandler getAddressInfoSmallByShopperIdCompleted;
        
        /// <remarks/>
        public event createEmailActionCompletedEventHandler createEmailActionCompleted;
        
        /// <remarks/>
        public event sendWelcomeEmailCompletedEventHandler sendWelcomeEmailCompleted;
        
        /// <remarks/>
        public event getFullAddressListByShopperIdCompletedEventHandler getFullAddressListByShopperIdCompleted;
        
        /// <remarks/>
        public event getSpamFilterSettingsCompletedEventHandler getSpamFilterSettingsCompleted;
        
        /// <remarks/>
        public event getAddressListByShopperIdCompletedEventHandler getAddressListByShopperIdCompleted;
        
        /// <remarks/>
        public event getAddressListByDomainCompletedEventHandler getAddressListByDomainCompleted;
        
        /// <remarks/>
        public event getAddressListByPlanUIDCompletedEventHandler getAddressListByPlanUIDCompleted;
        
        /// <remarks/>
        public event setStatusByEmailAddressCompletedEventHandler setStatusByEmailAddressCompleted;
        
        /// <remarks/>
        public event setStatusByDomainCompletedEventHandler setStatusByDomainCompleted;
        
        /// <remarks/>
        public event getShopperIdByEmailAddressCompletedEventHandler getShopperIdByEmailAddressCompleted;
        
        /// <remarks/>
        public event getResellerIdByEmailAddressCompletedEventHandler getResellerIdByEmailAddressCompleted;
        
        /// <remarks/>
        public event getSMTPRelayUIDsCompletedEventHandler getSMTPRelayUIDsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/createEmailAddress", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("response")]
        public string createEmailAddress(string emailaddress, string password, string pack_uid, string shopperId, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string resellerId, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string quota, string cc) {
            object[] results = this.Invoke("createEmailAddress", new object[] {
                        emailaddress,
                        password,
                        pack_uid,
                        shopperId,
                        resellerId,
                        quota,
                        cc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createEmailAddressAsync(string emailaddress, string password, string pack_uid, string shopperId, string resellerId, string quota, string cc) {
            this.createEmailAddressAsync(emailaddress, password, pack_uid, shopperId, resellerId, quota, cc, null);
        }
        
        /// <remarks/>
        public void createEmailAddressAsync(string emailaddress, string password, string pack_uid, string shopperId, string resellerId, string quota, string cc, object userState) {
            if ((this.createEmailAddressOperationCompleted == null)) {
                this.createEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateEmailAddressOperationCompleted);
            }
            this.InvokeAsync("createEmailAddress", new object[] {
                        emailaddress,
                        password,
                        pack_uid,
                        shopperId,
                        resellerId,
                        quota,
                        cc}, this.createEmailAddressOperationCompleted, userState);
        }
        
        private void OncreateEmailAddressOperationCompleted(object arg) {
            if ((this.createEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createEmailAddressCompleted(this, new createEmailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getActiveAccounts", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("response")]
        public string getActiveAccounts(string domain) {
            object[] results = this.Invoke("getActiveAccounts", new object[] {
                        domain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getActiveAccountsAsync(string domain) {
            this.getActiveAccountsAsync(domain, null);
        }
        
        /// <remarks/>
        public void getActiveAccountsAsync(string domain, object userState) {
            if ((this.getActiveAccountsOperationCompleted == null)) {
                this.getActiveAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActiveAccountsOperationCompleted);
            }
            this.InvokeAsync("getActiveAccounts", new object[] {
                        domain}, this.getActiveAccountsOperationCompleted, userState);
        }
        
        private void OngetActiveAccountsOperationCompleted(object arg) {
            if ((this.getActiveAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActiveAccountsCompleted(this, new getActiveAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getAuthRec", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public DataRecordEntry getAuthRec([System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string userNum, string userId) {
            object[] results = this.Invoke("getAuthRec", new object[] {
                        userNum,
                        userId});
            return ((DataRecordEntry)(results[0]));
        }
        
        /// <remarks/>
        public void getAuthRecAsync(string userNum, string userId) {
            this.getAuthRecAsync(userNum, userId, null);
        }
        
        /// <remarks/>
        public void getAuthRecAsync(string userNum, string userId, object userState) {
            if ((this.getAuthRecOperationCompleted == null)) {
                this.getAuthRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAuthRecOperationCompleted);
            }
            this.InvokeAsync("getAuthRec", new object[] {
                        userNum,
                        userId}, this.getAuthRecOperationCompleted, userState);
        }
        
        private void OngetAuthRecOperationCompleted(object arg) {
            if ((this.getAuthRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAuthRecCompleted(this, new getAuthRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getPodService", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public DataRecordEntry getPodService([System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string pod_id, string service_type) {
            object[] results = this.Invoke("getPodService", new object[] {
                        pod_id,
                        service_type});
            return ((DataRecordEntry)(results[0]));
        }
        
        /// <remarks/>
        public void getPodServiceAsync(string pod_id, string service_type) {
            this.getPodServiceAsync(pod_id, service_type, null);
        }
        
        /// <remarks/>
        public void getPodServiceAsync(string pod_id, string service_type, object userState) {
            if ((this.getPodServiceOperationCompleted == null)) {
                this.getPodServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPodServiceOperationCompleted);
            }
            this.InvokeAsync("getPodService", new object[] {
                        pod_id,
                        service_type}, this.getPodServiceOperationCompleted, userState);
        }
        
        private void OngetPodServiceOperationCompleted(object arg) {
            if ((this.getPodServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPodServiceCompleted(this, new getPodServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/updateAuthRec", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string updateAuthRec(DataRecordEntry rec) {
            object[] results = this.Invoke("updateAuthRec", new object[] {
                        rec});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateAuthRecAsync(DataRecordEntry rec) {
            this.updateAuthRecAsync(rec, null);
        }
        
        /// <remarks/>
        public void updateAuthRecAsync(DataRecordEntry rec, object userState) {
            if ((this.updateAuthRecOperationCompleted == null)) {
                this.updateAuthRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateAuthRecOperationCompleted);
            }
            this.InvokeAsync("updateAuthRec", new object[] {
                        rec}, this.updateAuthRecOperationCompleted, userState);
        }
        
        private void OnupdateAuthRecOperationCompleted(object arg) {
            if ((this.updateAuthRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateAuthRecCompleted(this, new updateAuthRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getUnlimitedEmailDetails", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public DataRecordEntry[] getUnlimitedEmailDetails([System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string userNum, string userId, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string showall) {
            object[] results = this.Invoke("getUnlimitedEmailDetails", new object[] {
                        userNum,
                        userId,
                        showall});
            return ((DataRecordEntry[])(results[0]));
        }
        
        /// <remarks/>
        public void getUnlimitedEmailDetailsAsync(string userNum, string userId, string showall) {
            this.getUnlimitedEmailDetailsAsync(userNum, userId, showall, null);
        }
        
        /// <remarks/>
        public void getUnlimitedEmailDetailsAsync(string userNum, string userId, string showall, object userState) {
            if ((this.getUnlimitedEmailDetailsOperationCompleted == null)) {
                this.getUnlimitedEmailDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnlimitedEmailDetailsOperationCompleted);
            }
            this.InvokeAsync("getUnlimitedEmailDetails", new object[] {
                        userNum,
                        userId,
                        showall}, this.getUnlimitedEmailDetailsOperationCompleted, userState);
        }
        
        private void OngetUnlimitedEmailDetailsOperationCompleted(object arg) {
            if ((this.getUnlimitedEmailDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnlimitedEmailDetailsCompleted(this, new getUnlimitedEmailDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/updateUnlimitedEmailDetails", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string updateUnlimitedEmailDetails(DataRecordEntry rec) {
            object[] results = this.Invoke("updateUnlimitedEmailDetails", new object[] {
                        rec});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateUnlimitedEmailDetailsAsync(DataRecordEntry rec) {
            this.updateUnlimitedEmailDetailsAsync(rec, null);
        }
        
        /// <remarks/>
        public void updateUnlimitedEmailDetailsAsync(DataRecordEntry rec, object userState) {
            if ((this.updateUnlimitedEmailDetailsOperationCompleted == null)) {
                this.updateUnlimitedEmailDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateUnlimitedEmailDetailsOperationCompleted);
            }
            this.InvokeAsync("updateUnlimitedEmailDetails", new object[] {
                        rec}, this.updateUnlimitedEmailDetailsOperationCompleted, userState);
        }
        
        private void OnupdateUnlimitedEmailDetailsOperationCompleted(object arg) {
            if ((this.updateUnlimitedEmailDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateUnlimitedEmailDetailsCompleted(this, new updateUnlimitedEmailDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/removeUnlimitedEmailDetails", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string removeUnlimitedEmailDetails([System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string userNum, string userId) {
            object[] results = this.Invoke("removeUnlimitedEmailDetails", new object[] {
                        userNum,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removeUnlimitedEmailDetailsAsync(string userNum, string userId) {
            this.removeUnlimitedEmailDetailsAsync(userNum, userId, null);
        }
        
        /// <remarks/>
        public void removeUnlimitedEmailDetailsAsync(string userNum, string userId, object userState) {
            if ((this.removeUnlimitedEmailDetailsOperationCompleted == null)) {
                this.removeUnlimitedEmailDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveUnlimitedEmailDetailsOperationCompleted);
            }
            this.InvokeAsync("removeUnlimitedEmailDetails", new object[] {
                        userNum,
                        userId}, this.removeUnlimitedEmailDetailsOperationCompleted, userState);
        }
        
        private void OnremoveUnlimitedEmailDetailsOperationCompleted(object arg) {
            if ((this.removeUnlimitedEmailDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeUnlimitedEmailDetailsCompleted(this, new removeUnlimitedEmailDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getUnlimitedEmailSettings", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public DataRecordEntry[] getUnlimitedEmailSettings([System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string userNum, string userId, string sortby) {
            object[] results = this.Invoke("getUnlimitedEmailSettings", new object[] {
                        userNum,
                        userId,
                        sortby});
            return ((DataRecordEntry[])(results[0]));
        }
        
        /// <remarks/>
        public void getUnlimitedEmailSettingsAsync(string userNum, string userId, string sortby) {
            this.getUnlimitedEmailSettingsAsync(userNum, userId, sortby, null);
        }
        
        /// <remarks/>
        public void getUnlimitedEmailSettingsAsync(string userNum, string userId, string sortby, object userState) {
            if ((this.getUnlimitedEmailSettingsOperationCompleted == null)) {
                this.getUnlimitedEmailSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnlimitedEmailSettingsOperationCompleted);
            }
            this.InvokeAsync("getUnlimitedEmailSettings", new object[] {
                        userNum,
                        userId,
                        sortby}, this.getUnlimitedEmailSettingsOperationCompleted, userState);
        }
        
        private void OngetUnlimitedEmailSettingsOperationCompleted(object arg) {
            if ((this.getUnlimitedEmailSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnlimitedEmailSettingsCompleted(this, new getUnlimitedEmailSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/updateUnlimitedEmailSettings", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string updateUnlimitedEmailSettings(DataRecordEntry rec) {
            object[] results = this.Invoke("updateUnlimitedEmailSettings", new object[] {
                        rec});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateUnlimitedEmailSettingsAsync(DataRecordEntry rec) {
            this.updateUnlimitedEmailSettingsAsync(rec, null);
        }
        
        /// <remarks/>
        public void updateUnlimitedEmailSettingsAsync(DataRecordEntry rec, object userState) {
            if ((this.updateUnlimitedEmailSettingsOperationCompleted == null)) {
                this.updateUnlimitedEmailSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateUnlimitedEmailSettingsOperationCompleted);
            }
            this.InvokeAsync("updateUnlimitedEmailSettings", new object[] {
                        rec}, this.updateUnlimitedEmailSettingsOperationCompleted, userState);
        }
        
        private void OnupdateUnlimitedEmailSettingsOperationCompleted(object arg) {
            if ((this.updateUnlimitedEmailSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateUnlimitedEmailSettingsCompleted(this, new updateUnlimitedEmailSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/removeUnlimitedEmailSettings", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string removeUnlimitedEmailSettings([System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string userNum, string userId) {
            object[] results = this.Invoke("removeUnlimitedEmailSettings", new object[] {
                        userNum,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removeUnlimitedEmailSettingsAsync(string userNum, string userId) {
            this.removeUnlimitedEmailSettingsAsync(userNum, userId, null);
        }
        
        /// <remarks/>
        public void removeUnlimitedEmailSettingsAsync(string userNum, string userId, object userState) {
            if ((this.removeUnlimitedEmailSettingsOperationCompleted == null)) {
                this.removeUnlimitedEmailSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveUnlimitedEmailSettingsOperationCompleted);
            }
            this.InvokeAsync("removeUnlimitedEmailSettings", new object[] {
                        userNum,
                        userId}, this.removeUnlimitedEmailSettingsOperationCompleted, userState);
        }
        
        private void OnremoveUnlimitedEmailSettingsOperationCompleted(object arg) {
            if ((this.removeUnlimitedEmailSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeUnlimitedEmailSettingsCompleted(this, new removeUnlimitedEmailSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getUnlimitedEmailHist", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public DataRecordEntry[] getUnlimitedEmailHist([System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string userNum, string userId, string sortby) {
            object[] results = this.Invoke("getUnlimitedEmailHist", new object[] {
                        userNum,
                        userId,
                        sortby});
            return ((DataRecordEntry[])(results[0]));
        }
        
        /// <remarks/>
        public void getUnlimitedEmailHistAsync(string userNum, string userId, string sortby) {
            this.getUnlimitedEmailHistAsync(userNum, userId, sortby, null);
        }
        
        /// <remarks/>
        public void getUnlimitedEmailHistAsync(string userNum, string userId, string sortby, object userState) {
            if ((this.getUnlimitedEmailHistOperationCompleted == null)) {
                this.getUnlimitedEmailHistOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnlimitedEmailHistOperationCompleted);
            }
            this.InvokeAsync("getUnlimitedEmailHist", new object[] {
                        userNum,
                        userId,
                        sortby}, this.getUnlimitedEmailHistOperationCompleted, userState);
        }
        
        private void OngetUnlimitedEmailHistOperationCompleted(object arg) {
            if ((this.getUnlimitedEmailHistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnlimitedEmailHistCompleted(this, new getUnlimitedEmailHistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/updateUnlimitedEmailHist", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string updateUnlimitedEmailHist(DataRecordEntry rec) {
            object[] results = this.Invoke("updateUnlimitedEmailHist", new object[] {
                        rec});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateUnlimitedEmailHistAsync(DataRecordEntry rec) {
            this.updateUnlimitedEmailHistAsync(rec, null);
        }
        
        /// <remarks/>
        public void updateUnlimitedEmailHistAsync(DataRecordEntry rec, object userState) {
            if ((this.updateUnlimitedEmailHistOperationCompleted == null)) {
                this.updateUnlimitedEmailHistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateUnlimitedEmailHistOperationCompleted);
            }
            this.InvokeAsync("updateUnlimitedEmailHist", new object[] {
                        rec}, this.updateUnlimitedEmailHistOperationCompleted, userState);
        }
        
        private void OnupdateUnlimitedEmailHistOperationCompleted(object arg) {
            if ((this.updateUnlimitedEmailHistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateUnlimitedEmailHistCompleted(this, new updateUnlimitedEmailHistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/removeUnlimitedEmailHist", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string removeUnlimitedEmailHist([System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string userNum, string userId) {
            object[] results = this.Invoke("removeUnlimitedEmailHist", new object[] {
                        userNum,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removeUnlimitedEmailHistAsync(string userNum, string userId) {
            this.removeUnlimitedEmailHistAsync(userNum, userId, null);
        }
        
        /// <remarks/>
        public void removeUnlimitedEmailHistAsync(string userNum, string userId, object userState) {
            if ((this.removeUnlimitedEmailHistOperationCompleted == null)) {
                this.removeUnlimitedEmailHistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveUnlimitedEmailHistOperationCompleted);
            }
            this.InvokeAsync("removeUnlimitedEmailHist", new object[] {
                        userNum,
                        userId}, this.removeUnlimitedEmailHistOperationCompleted, userState);
        }
        
        private void OnremoveUnlimitedEmailHistOperationCompleted(object arg) {
            if ((this.removeUnlimitedEmailHistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeUnlimitedEmailHistCompleted(this, new removeUnlimitedEmailHistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getInfo", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public EmailAccountInfo getInfo(string packuid) {
            object[] results = this.Invoke("getInfo", new object[] {
                        packuid});
            return ((EmailAccountInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getInfoAsync(string packuid) {
            this.getInfoAsync(packuid, null);
        }
        
        /// <remarks/>
        public void getInfoAsync(string packuid, object userState) {
            if ((this.getInfoOperationCompleted == null)) {
                this.getInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInfoOperationCompleted);
            }
            this.InvokeAsync("getInfo", new object[] {
                        packuid}, this.getInfoOperationCompleted, userState);
        }
        
        private void OngetInfoOperationCompleted(object arg) {
            if ((this.getInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInfoCompleted(this, new getInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getResellerIdByDomain", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("resellerid", DataType="integer")]
        public string getResellerIdByDomain(string domain) {
            object[] results = this.Invoke("getResellerIdByDomain", new object[] {
                        domain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getResellerIdByDomainAsync(string domain) {
            this.getResellerIdByDomainAsync(domain, null);
        }
        
        /// <remarks/>
        public void getResellerIdByDomainAsync(string domain, object userState) {
            if ((this.getResellerIdByDomainOperationCompleted == null)) {
                this.getResellerIdByDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetResellerIdByDomainOperationCompleted);
            }
            this.InvokeAsync("getResellerIdByDomain", new object[] {
                        domain}, this.getResellerIdByDomainOperationCompleted, userState);
        }
        
        private void OngetResellerIdByDomainOperationCompleted(object arg) {
            if ((this.getResellerIdByDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getResellerIdByDomainCompleted(this, new getResellerIdByDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getAccountListByShopperId", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("list")]
        public string[] getAccountListByShopperId(string shopperid, string resellerid) {
            object[] results = this.Invoke("getAccountListByShopperId", new object[] {
                        shopperid,
                        resellerid});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getAccountListByShopperIdAsync(string shopperid, string resellerid) {
            this.getAccountListByShopperIdAsync(shopperid, resellerid, null);
        }
        
        /// <remarks/>
        public void getAccountListByShopperIdAsync(string shopperid, string resellerid, object userState) {
            if ((this.getAccountListByShopperIdOperationCompleted == null)) {
                this.getAccountListByShopperIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountListByShopperIdOperationCompleted);
            }
            this.InvokeAsync("getAccountListByShopperId", new object[] {
                        shopperid,
                        resellerid}, this.getAccountListByShopperIdOperationCompleted, userState);
        }
        
        private void OngetAccountListByShopperIdOperationCompleted(object arg) {
            if ((this.getAccountListByShopperIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountListByShopperIdCompleted(this, new getAccountListByShopperIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getDomainStatus", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("response")]
        public string getDomainStatus(string domain, string shopperId, string resellerId) {
            object[] results = this.Invoke("getDomainStatus", new object[] {
                        domain,
                        shopperId,
                        resellerId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDomainStatusAsync(string domain, string shopperId, string resellerId) {
            this.getDomainStatusAsync(domain, shopperId, resellerId, null);
        }
        
        /// <remarks/>
        public void getDomainStatusAsync(string domain, string shopperId, string resellerId, object userState) {
            if ((this.getDomainStatusOperationCompleted == null)) {
                this.getDomainStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDomainStatusOperationCompleted);
            }
            this.InvokeAsync("getDomainStatus", new object[] {
                        domain,
                        shopperId,
                        resellerId}, this.getDomainStatusOperationCompleted, userState);
        }
        
        private void OngetDomainStatusOperationCompleted(object arg) {
            if ((this.getDomainStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDomainStatusCompleted(this, new getDomainStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getInfoByEmailAddress", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public EmailAddressInfo getInfoByEmailAddress(string emailaddress) {
            object[] results = this.Invoke("getInfoByEmailAddress", new object[] {
                        emailaddress});
            return ((EmailAddressInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getInfoByEmailAddressAsync(string emailaddress) {
            this.getInfoByEmailAddressAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void getInfoByEmailAddressAsync(string emailaddress, object userState) {
            if ((this.getInfoByEmailAddressOperationCompleted == null)) {
                this.getInfoByEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInfoByEmailAddressOperationCompleted);
            }
            this.InvokeAsync("getInfoByEmailAddress", new object[] {
                        emailaddress}, this.getInfoByEmailAddressOperationCompleted, userState);
        }
        
        private void OngetInfoByEmailAddressOperationCompleted(object arg) {
            if ((this.getInfoByEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInfoByEmailAddressCompleted(this, new getInfoByEmailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getAddressInfoByDomain", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("list")]
        public EmailAddressListInfo[] getAddressInfoByDomain(string domain, string activeOnly) {
            object[] results = this.Invoke("getAddressInfoByDomain", new object[] {
                        domain,
                        activeOnly});
            return ((EmailAddressListInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getAddressInfoByDomainAsync(string domain, string activeOnly) {
            this.getAddressInfoByDomainAsync(domain, activeOnly, null);
        }
        
        /// <remarks/>
        public void getAddressInfoByDomainAsync(string domain, string activeOnly, object userState) {
            if ((this.getAddressInfoByDomainOperationCompleted == null)) {
                this.getAddressInfoByDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAddressInfoByDomainOperationCompleted);
            }
            this.InvokeAsync("getAddressInfoByDomain", new object[] {
                        domain,
                        activeOnly}, this.getAddressInfoByDomainOperationCompleted, userState);
        }
        
        private void OngetAddressInfoByDomainOperationCompleted(object arg) {
            if ((this.getAddressInfoByDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAddressInfoByDomainCompleted(this, new getAddressInfoByDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getAddressInfoByShopperId", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("list")]
        public EmailAddressListInfo[] getAddressInfoByShopperId(string shopperId, string resellerId, string activeOnly) {
            object[] results = this.Invoke("getAddressInfoByShopperId", new object[] {
                        shopperId,
                        resellerId,
                        activeOnly});
            return ((EmailAddressListInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getAddressInfoByShopperIdAsync(string shopperId, string resellerId, string activeOnly) {
            this.getAddressInfoByShopperIdAsync(shopperId, resellerId, activeOnly, null);
        }
        
        /// <remarks/>
        public void getAddressInfoByShopperIdAsync(string shopperId, string resellerId, string activeOnly, object userState) {
            if ((this.getAddressInfoByShopperIdOperationCompleted == null)) {
                this.getAddressInfoByShopperIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAddressInfoByShopperIdOperationCompleted);
            }
            this.InvokeAsync("getAddressInfoByShopperId", new object[] {
                        shopperId,
                        resellerId,
                        activeOnly}, this.getAddressInfoByShopperIdOperationCompleted, userState);
        }
        
        private void OngetAddressInfoByShopperIdOperationCompleted(object arg) {
            if ((this.getAddressInfoByShopperIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAddressInfoByShopperIdCompleted(this, new getAddressInfoByShopperIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getAddressInfoSmallByShopperId" +
            "", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("list")]
        public EmailAddressListInfoSmall[] getAddressInfoSmallByShopperId(string shopperId, string resellerId, string activeOnly) {
            object[] results = this.Invoke("getAddressInfoSmallByShopperId", new object[] {
                        shopperId,
                        resellerId,
                        activeOnly});
            return ((EmailAddressListInfoSmall[])(results[0]));
        }
        
        /// <remarks/>
        public void getAddressInfoSmallByShopperIdAsync(string shopperId, string resellerId, string activeOnly) {
            this.getAddressInfoSmallByShopperIdAsync(shopperId, resellerId, activeOnly, null);
        }
        
        /// <remarks/>
        public void getAddressInfoSmallByShopperIdAsync(string shopperId, string resellerId, string activeOnly, object userState) {
            if ((this.getAddressInfoSmallByShopperIdOperationCompleted == null)) {
                this.getAddressInfoSmallByShopperIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAddressInfoSmallByShopperIdOperationCompleted);
            }
            this.InvokeAsync("getAddressInfoSmallByShopperId", new object[] {
                        shopperId,
                        resellerId,
                        activeOnly}, this.getAddressInfoSmallByShopperIdOperationCompleted, userState);
        }
        
        private void OngetAddressInfoSmallByShopperIdOperationCompleted(object arg) {
            if ((this.getAddressInfoSmallByShopperIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAddressInfoSmallByShopperIdCompleted(this, new getAddressInfoSmallByShopperIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/createEmailAction", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("response", DataType="integer")]
        public string createEmailAction(string type, string emailaddress) {
            object[] results = this.Invoke("createEmailAction", new object[] {
                        type,
                        emailaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createEmailActionAsync(string type, string emailaddress) {
            this.createEmailActionAsync(type, emailaddress, null);
        }
        
        /// <remarks/>
        public void createEmailActionAsync(string type, string emailaddress, object userState) {
            if ((this.createEmailActionOperationCompleted == null)) {
                this.createEmailActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateEmailActionOperationCompleted);
            }
            this.InvokeAsync("createEmailAction", new object[] {
                        type,
                        emailaddress}, this.createEmailActionOperationCompleted, userState);
        }
        
        private void OncreateEmailActionOperationCompleted(object arg) {
            if ((this.createEmailActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createEmailActionCompleted(this, new createEmailActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/sendWelcomeEmail", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("response", DataType="integer")]
        public string sendWelcomeEmail(string email, string shopper, string plid) {
            object[] results = this.Invoke("sendWelcomeEmail", new object[] {
                        email,
                        shopper,
                        plid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendWelcomeEmailAsync(string email, string shopper, string plid) {
            this.sendWelcomeEmailAsync(email, shopper, plid, null);
        }
        
        /// <remarks/>
        public void sendWelcomeEmailAsync(string email, string shopper, string plid, object userState) {
            if ((this.sendWelcomeEmailOperationCompleted == null)) {
                this.sendWelcomeEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendWelcomeEmailOperationCompleted);
            }
            this.InvokeAsync("sendWelcomeEmail", new object[] {
                        email,
                        shopper,
                        plid}, this.sendWelcomeEmailOperationCompleted, userState);
        }
        
        private void OnsendWelcomeEmailOperationCompleted(object arg) {
            if ((this.sendWelcomeEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendWelcomeEmailCompleted(this, new sendWelcomeEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getFullAddressListByShopperId", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("response")]
        public AddressListEntry[] getFullAddressListByShopperId(string shopperId, string resellerId) {
            object[] results = this.Invoke("getFullAddressListByShopperId", new object[] {
                        shopperId,
                        resellerId});
            return ((AddressListEntry[])(results[0]));
        }
        
        /// <remarks/>
        public void getFullAddressListByShopperIdAsync(string shopperId, string resellerId) {
            this.getFullAddressListByShopperIdAsync(shopperId, resellerId, null);
        }
        
        /// <remarks/>
        public void getFullAddressListByShopperIdAsync(string shopperId, string resellerId, object userState) {
            if ((this.getFullAddressListByShopperIdOperationCompleted == null)) {
                this.getFullAddressListByShopperIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFullAddressListByShopperIdOperationCompleted);
            }
            this.InvokeAsync("getFullAddressListByShopperId", new object[] {
                        shopperId,
                        resellerId}, this.getFullAddressListByShopperIdOperationCompleted, userState);
        }
        
        private void OngetFullAddressListByShopperIdOperationCompleted(object arg) {
            if ((this.getFullAddressListByShopperIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFullAddressListByShopperIdCompleted(this, new getFullAddressListByShopperIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getSpamFilterSettings", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string[] getSpamFilterSettings([System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string pod, string emailaddress) {
            object[] results = this.Invoke("getSpamFilterSettings", new object[] {
                        pod,
                        emailaddress});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getSpamFilterSettingsAsync(string pod, string emailaddress) {
            this.getSpamFilterSettingsAsync(pod, emailaddress, null);
        }
        
        /// <remarks/>
        public void getSpamFilterSettingsAsync(string pod, string emailaddress, object userState) {
            if ((this.getSpamFilterSettingsOperationCompleted == null)) {
                this.getSpamFilterSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSpamFilterSettingsOperationCompleted);
            }
            this.InvokeAsync("getSpamFilterSettings", new object[] {
                        pod,
                        emailaddress}, this.getSpamFilterSettingsOperationCompleted, userState);
        }
        
        private void OngetSpamFilterSettingsOperationCompleted(object arg) {
            if ((this.getSpamFilterSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSpamFilterSettingsCompleted(this, new getSpamFilterSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getAddressListByShopperId", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("list")]
        public string[] getAddressListByShopperId(string shopperid, string resellerid, string activeOnly) {
            object[] results = this.Invoke("getAddressListByShopperId", new object[] {
                        shopperid,
                        resellerid,
                        activeOnly});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getAddressListByShopperIdAsync(string shopperid, string resellerid, string activeOnly) {
            this.getAddressListByShopperIdAsync(shopperid, resellerid, activeOnly, null);
        }
        
        /// <remarks/>
        public void getAddressListByShopperIdAsync(string shopperid, string resellerid, string activeOnly, object userState) {
            if ((this.getAddressListByShopperIdOperationCompleted == null)) {
                this.getAddressListByShopperIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAddressListByShopperIdOperationCompleted);
            }
            this.InvokeAsync("getAddressListByShopperId", new object[] {
                        shopperid,
                        resellerid,
                        activeOnly}, this.getAddressListByShopperIdOperationCompleted, userState);
        }
        
        private void OngetAddressListByShopperIdOperationCompleted(object arg) {
            if ((this.getAddressListByShopperIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAddressListByShopperIdCompleted(this, new getAddressListByShopperIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getAddressListByDomain", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("list")]
        public string[] getAddressListByDomain(string domain, string activeOnly) {
            object[] results = this.Invoke("getAddressListByDomain", new object[] {
                        domain,
                        activeOnly});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getAddressListByDomainAsync(string domain, string activeOnly) {
            this.getAddressListByDomainAsync(domain, activeOnly, null);
        }
        
        /// <remarks/>
        public void getAddressListByDomainAsync(string domain, string activeOnly, object userState) {
            if ((this.getAddressListByDomainOperationCompleted == null)) {
                this.getAddressListByDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAddressListByDomainOperationCompleted);
            }
            this.InvokeAsync("getAddressListByDomain", new object[] {
                        domain,
                        activeOnly}, this.getAddressListByDomainOperationCompleted, userState);
        }
        
        private void OngetAddressListByDomainOperationCompleted(object arg) {
            if ((this.getAddressListByDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAddressListByDomainCompleted(this, new getAddressListByDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getAddressListByPlanUID", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("list")]
        public string[] getAddressListByPlanUID(string uid, string activeOnly) {
            object[] results = this.Invoke("getAddressListByPlanUID", new object[] {
                        uid,
                        activeOnly});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getAddressListByPlanUIDAsync(string uid, string activeOnly) {
            this.getAddressListByPlanUIDAsync(uid, activeOnly, null);
        }
        
        /// <remarks/>
        public void getAddressListByPlanUIDAsync(string uid, string activeOnly, object userState) {
            if ((this.getAddressListByPlanUIDOperationCompleted == null)) {
                this.getAddressListByPlanUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAddressListByPlanUIDOperationCompleted);
            }
            this.InvokeAsync("getAddressListByPlanUID", new object[] {
                        uid,
                        activeOnly}, this.getAddressListByPlanUIDOperationCompleted, userState);
        }
        
        private void OngetAddressListByPlanUIDOperationCompleted(object arg) {
            if ((this.getAddressListByPlanUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAddressListByPlanUIDCompleted(this, new getAddressListByPlanUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/setStatusByEmailAddress", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        public void setStatusByEmailAddress(string emailaddress, string status) {
            this.Invoke("setStatusByEmailAddress", new object[] {
                        emailaddress,
                        status});
        }
        
        /// <remarks/>
        public void setStatusByEmailAddressAsync(string emailaddress, string status) {
            this.setStatusByEmailAddressAsync(emailaddress, status, null);
        }
        
        /// <remarks/>
        public void setStatusByEmailAddressAsync(string emailaddress, string status, object userState) {
            if ((this.setStatusByEmailAddressOperationCompleted == null)) {
                this.setStatusByEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetStatusByEmailAddressOperationCompleted);
            }
            this.InvokeAsync("setStatusByEmailAddress", new object[] {
                        emailaddress,
                        status}, this.setStatusByEmailAddressOperationCompleted, userState);
        }
        
        private void OnsetStatusByEmailAddressOperationCompleted(object arg) {
            if ((this.setStatusByEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setStatusByEmailAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/setStatusByDomain", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        public void setStatusByDomain(string domain, string status) {
            this.Invoke("setStatusByDomain", new object[] {
                        domain,
                        status});
        }
        
        /// <remarks/>
        public void setStatusByDomainAsync(string domain, string status) {
            this.setStatusByDomainAsync(domain, status, null);
        }
        
        /// <remarks/>
        public void setStatusByDomainAsync(string domain, string status, object userState) {
            if ((this.setStatusByDomainOperationCompleted == null)) {
                this.setStatusByDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetStatusByDomainOperationCompleted);
            }
            this.InvokeAsync("setStatusByDomain", new object[] {
                        domain,
                        status}, this.setStatusByDomainOperationCompleted, userState);
        }
        
        private void OnsetStatusByDomainOperationCompleted(object arg) {
            if ((this.setStatusByDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setStatusByDomainCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getShopperIdByEmailAddress", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("shopperid")]
        public string getShopperIdByEmailAddress(string emailaddress) {
            object[] results = this.Invoke("getShopperIdByEmailAddress", new object[] {
                        emailaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getShopperIdByEmailAddressAsync(string emailaddress) {
            this.getShopperIdByEmailAddressAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void getShopperIdByEmailAddressAsync(string emailaddress, object userState) {
            if ((this.getShopperIdByEmailAddressOperationCompleted == null)) {
                this.getShopperIdByEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetShopperIdByEmailAddressOperationCompleted);
            }
            this.InvokeAsync("getShopperIdByEmailAddress", new object[] {
                        emailaddress}, this.getShopperIdByEmailAddressOperationCompleted, userState);
        }
        
        private void OngetShopperIdByEmailAddressOperationCompleted(object arg) {
            if ((this.getShopperIdByEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getShopperIdByEmailAddressCompleted(this, new getShopperIdByEmailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getResellerIdByEmailAddress", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("resellerid")]
        public string getResellerIdByEmailAddress(string emailaddress) {
            object[] results = this.Invoke("getResellerIdByEmailAddress", new object[] {
                        emailaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getResellerIdByEmailAddressAsync(string emailaddress) {
            this.getResellerIdByEmailAddressAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void getResellerIdByEmailAddressAsync(string emailaddress, object userState) {
            if ((this.getResellerIdByEmailAddressOperationCompleted == null)) {
                this.getResellerIdByEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetResellerIdByEmailAddressOperationCompleted);
            }
            this.InvokeAsync("getResellerIdByEmailAddress", new object[] {
                        emailaddress}, this.getResellerIdByEmailAddressOperationCompleted, userState);
        }
        
        private void OngetResellerIdByEmailAddressOperationCompleted(object arg) {
            if ((this.getResellerIdByEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getResellerIdByEmailAddressCompleted(this, new getResellerIdByEmailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://ecc.devlhvm03.stgwbe.com/soap/emailinfo.php/getSMTPRelayUIDs", RequestNamespace="ECCEmailInfoNS", ResponseNamespace="ECCEmailInfoNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("uids")]
        public string[] getSMTPRelayUIDs(string shopperid, string resellerid) {
            object[] results = this.Invoke("getSMTPRelayUIDs", new object[] {
                        shopperid,
                        resellerid});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getSMTPRelayUIDsAsync(string shopperid, string resellerid) {
            this.getSMTPRelayUIDsAsync(shopperid, resellerid, null);
        }
        
        /// <remarks/>
        public void getSMTPRelayUIDsAsync(string shopperid, string resellerid, object userState) {
            if ((this.getSMTPRelayUIDsOperationCompleted == null)) {
                this.getSMTPRelayUIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSMTPRelayUIDsOperationCompleted);
            }
            this.InvokeAsync("getSMTPRelayUIDs", new object[] {
                        shopperid,
                        resellerid}, this.getSMTPRelayUIDsOperationCompleted, userState);
        }
        
        private void OngetSMTPRelayUIDsOperationCompleted(object arg) {
            if ((this.getSMTPRelayUIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSMTPRelayUIDsCompleted(this, new getSMTPRelayUIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="ECCEmailInfoNS")]
    public partial class DataRecordEntry {
        
        private string[] keysField;
        
        private string[] valuesField;
        
        /// <remarks/>
        public string[] keys {
            get {
                return this.keysField;
            }
            set {
                this.keysField = value;
            }
        }
        
        /// <remarks/>
        public string[] values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="ECCEmailInfoNS")]
    public partial class AddressListEntry {
        
        private string addrField;
        
        private string statusField;
        
        /// <remarks/>
        public string addr {
            get {
                return this.addrField;
            }
            set {
                this.addrField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="ECCEmailInfoNS")]
    public partial class EmailAddressListInfoSmall {
        
        private string usernameField;
        
        private string domainField;
        
        private string typeField;
        
        private string email_address_idField;
        
        private string catchallField;
        
        private string max_sizeField;
        
        private string pod_idField;
        
        private string statusField;
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string email_address_id {
            get {
                return this.email_address_idField;
            }
            set {
                this.email_address_idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string catchall {
            get {
                return this.catchallField;
            }
            set {
                this.catchallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string max_size {
            get {
                return this.max_sizeField;
            }
            set {
                this.max_sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string pod_id {
            get {
                return this.pod_idField;
            }
            set {
                this.pod_idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="ECCEmailInfoNS")]
    public partial class EmailAddressListInfo {
        
        private string usernameField;
        
        private string domainField;
        
        private string typeField;
        
        private string email_address_idField;
        
        private string catchallField;
        
        private string is_spam_filter_onField;
        
        private string alias_redirectField;
        
        private string forward_listField;
        
        private string other_languageField;
        
        private string max_sizeField;
        
        private string pod_idField;
        
        private string statusField;
        
        private string returnField;
        
        private string create_timestampField;
        
        private string last_update_timestampField;
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string email_address_id {
            get {
                return this.email_address_idField;
            }
            set {
                this.email_address_idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string catchall {
            get {
                return this.catchallField;
            }
            set {
                this.catchallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string is_spam_filter_on {
            get {
                return this.is_spam_filter_onField;
            }
            set {
                this.is_spam_filter_onField = value;
            }
        }
        
        /// <remarks/>
        public string alias_redirect {
            get {
                return this.alias_redirectField;
            }
            set {
                this.alias_redirectField = value;
            }
        }
        
        /// <remarks/>
        public string forward_list {
            get {
                return this.forward_listField;
            }
            set {
                this.forward_listField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string other_language {
            get {
                return this.other_languageField;
            }
            set {
                this.other_languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string max_size {
            get {
                return this.max_sizeField;
            }
            set {
                this.max_sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string pod_id {
            get {
                return this.pod_idField;
            }
            set {
                this.pod_idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string @return {
            get {
                return this.returnField;
            }
            set {
                this.returnField = value;
            }
        }
        
        /// <remarks/>
        public string create_timestamp {
            get {
                return this.create_timestampField;
            }
            set {
                this.create_timestampField = value;
            }
        }
        
        /// <remarks/>
        public string last_update_timestamp {
            get {
                return this.last_update_timestampField;
            }
            set {
                this.last_update_timestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="ECCEmailInfoNS")]
    public partial class EmailAddressInfo {
        
        private string usernameField;
        
        private string domainField;
        
        private string typeField;
        
        private string email_address_idField;
        
        private string catchallField;
        
        private string is_spam_filter_onField;
        
        private string alias_redirectField;
        
        private string forward_listField;
        
        private string other_languageField;
        
        private string max_sizeField;
        
        private long usedField;
        
        private long quotaField;
        
        private string dbnumField;
        
        private string pod_idField;
        
        private string statusField;
        
        private string returnField;
        
        private string is_autoresponder_onField;
        
        private string create_timestampField;
        
        private string last_update_timestampField;
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string email_address_id {
            get {
                return this.email_address_idField;
            }
            set {
                this.email_address_idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string catchall {
            get {
                return this.catchallField;
            }
            set {
                this.catchallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string is_spam_filter_on {
            get {
                return this.is_spam_filter_onField;
            }
            set {
                this.is_spam_filter_onField = value;
            }
        }
        
        /// <remarks/>
        public string alias_redirect {
            get {
                return this.alias_redirectField;
            }
            set {
                this.alias_redirectField = value;
            }
        }
        
        /// <remarks/>
        public string forward_list {
            get {
                return this.forward_listField;
            }
            set {
                this.forward_listField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string other_language {
            get {
                return this.other_languageField;
            }
            set {
                this.other_languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string max_size {
            get {
                return this.max_sizeField;
            }
            set {
                this.max_sizeField = value;
            }
        }
        
        /// <remarks/>
        public long used {
            get {
                return this.usedField;
            }
            set {
                this.usedField = value;
            }
        }
        
        /// <remarks/>
        public long quota {
            get {
                return this.quotaField;
            }
            set {
                this.quotaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string dbnum {
            get {
                return this.dbnumField;
            }
            set {
                this.dbnumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string pod_id {
            get {
                return this.pod_idField;
            }
            set {
                this.pod_idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string @return {
            get {
                return this.returnField;
            }
            set {
                this.returnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string is_autoresponder_on {
            get {
                return this.is_autoresponder_onField;
            }
            set {
                this.is_autoresponder_onField = value;
            }
        }
        
        /// <remarks/>
        public string create_timestamp {
            get {
                return this.create_timestampField;
            }
            set {
                this.create_timestampField = value;
            }
        }
        
        /// <remarks/>
        public string last_update_timestamp {
            get {
                return this.last_update_timestampField;
            }
            set {
                this.last_update_timestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="ECCEmailInfoNS")]
    public partial class EmailAccountInfo {
        
        private string number_of_addressesField;
        
        private string space_allocatedField;
        
        private string space_usedField;
        
        private string freeField;
        
        private string returnField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string number_of_addresses {
            get {
                return this.number_of_addressesField;
            }
            set {
                this.number_of_addressesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string space_allocated {
            get {
                return this.space_allocatedField;
            }
            set {
                this.space_allocatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string space_used {
            get {
                return this.space_usedField;
            }
            set {
                this.space_usedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string free {
            get {
                return this.freeField;
            }
            set {
                this.freeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string @return {
            get {
                return this.returnField;
            }
            set {
                this.returnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createEmailAddressCompletedEventHandler(object sender, createEmailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createEmailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createEmailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getActiveAccountsCompletedEventHandler(object sender, getActiveAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActiveAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActiveAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAuthRecCompletedEventHandler(object sender, getAuthRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAuthRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAuthRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataRecordEntry Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataRecordEntry)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPodServiceCompletedEventHandler(object sender, getPodServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPodServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPodServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataRecordEntry Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataRecordEntry)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateAuthRecCompletedEventHandler(object sender, updateAuthRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateAuthRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateAuthRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getUnlimitedEmailDetailsCompletedEventHandler(object sender, getUnlimitedEmailDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUnlimitedEmailDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUnlimitedEmailDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataRecordEntry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataRecordEntry[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateUnlimitedEmailDetailsCompletedEventHandler(object sender, updateUnlimitedEmailDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateUnlimitedEmailDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateUnlimitedEmailDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void removeUnlimitedEmailDetailsCompletedEventHandler(object sender, removeUnlimitedEmailDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeUnlimitedEmailDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeUnlimitedEmailDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getUnlimitedEmailSettingsCompletedEventHandler(object sender, getUnlimitedEmailSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUnlimitedEmailSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUnlimitedEmailSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataRecordEntry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataRecordEntry[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateUnlimitedEmailSettingsCompletedEventHandler(object sender, updateUnlimitedEmailSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateUnlimitedEmailSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateUnlimitedEmailSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void removeUnlimitedEmailSettingsCompletedEventHandler(object sender, removeUnlimitedEmailSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeUnlimitedEmailSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeUnlimitedEmailSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getUnlimitedEmailHistCompletedEventHandler(object sender, getUnlimitedEmailHistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUnlimitedEmailHistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUnlimitedEmailHistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataRecordEntry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataRecordEntry[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateUnlimitedEmailHistCompletedEventHandler(object sender, updateUnlimitedEmailHistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateUnlimitedEmailHistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateUnlimitedEmailHistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void removeUnlimitedEmailHistCompletedEventHandler(object sender, removeUnlimitedEmailHistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeUnlimitedEmailHistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeUnlimitedEmailHistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getInfoCompletedEventHandler(object sender, getInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmailAccountInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmailAccountInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getResellerIdByDomainCompletedEventHandler(object sender, getResellerIdByDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getResellerIdByDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getResellerIdByDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAccountListByShopperIdCompletedEventHandler(object sender, getAccountListByShopperIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountListByShopperIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountListByShopperIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDomainStatusCompletedEventHandler(object sender, getDomainStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDomainStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDomainStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getInfoByEmailAddressCompletedEventHandler(object sender, getInfoByEmailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInfoByEmailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInfoByEmailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmailAddressInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmailAddressInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAddressInfoByDomainCompletedEventHandler(object sender, getAddressInfoByDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAddressInfoByDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAddressInfoByDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmailAddressListInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmailAddressListInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAddressInfoByShopperIdCompletedEventHandler(object sender, getAddressInfoByShopperIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAddressInfoByShopperIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAddressInfoByShopperIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmailAddressListInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmailAddressListInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAddressInfoSmallByShopperIdCompletedEventHandler(object sender, getAddressInfoSmallByShopperIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAddressInfoSmallByShopperIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAddressInfoSmallByShopperIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmailAddressListInfoSmall[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmailAddressListInfoSmall[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createEmailActionCompletedEventHandler(object sender, createEmailActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createEmailActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createEmailActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void sendWelcomeEmailCompletedEventHandler(object sender, sendWelcomeEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendWelcomeEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendWelcomeEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getFullAddressListByShopperIdCompletedEventHandler(object sender, getFullAddressListByShopperIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFullAddressListByShopperIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFullAddressListByShopperIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressListEntry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressListEntry[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSpamFilterSettingsCompletedEventHandler(object sender, getSpamFilterSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSpamFilterSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSpamFilterSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAddressListByShopperIdCompletedEventHandler(object sender, getAddressListByShopperIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAddressListByShopperIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAddressListByShopperIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAddressListByDomainCompletedEventHandler(object sender, getAddressListByDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAddressListByDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAddressListByDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAddressListByPlanUIDCompletedEventHandler(object sender, getAddressListByPlanUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAddressListByPlanUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAddressListByPlanUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void setStatusByEmailAddressCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void setStatusByDomainCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getShopperIdByEmailAddressCompletedEventHandler(object sender, getShopperIdByEmailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getShopperIdByEmailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getShopperIdByEmailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getResellerIdByEmailAddressCompletedEventHandler(object sender, getResellerIdByEmailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getResellerIdByEmailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getResellerIdByEmailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSMTPRelayUIDsCompletedEventHandler(object sender, getSMTPRelayUIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSMTPRelayUIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSMTPRelayUIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591