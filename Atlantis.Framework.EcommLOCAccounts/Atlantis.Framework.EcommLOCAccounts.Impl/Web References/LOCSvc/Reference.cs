//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.269.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.EcommLOCAccounts.Impl.LOCSvc
{


  /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAccountsForShopperOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDetailsForAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableCreditByAccountIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableCreditByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountIDByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShopperHasLOCOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Atlantis.Framework.EcommLOCAccounts.Impl.Properties.Settings.Default.Atlantis_Framework_EcommLOCAccounts_Impl_LOCSvc_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAccountsForShopperCompletedEventHandler GetAccountsForShopperCompleted;
        
        /// <remarks/>
        public event GetDetailsForAccountCompletedEventHandler GetDetailsForAccountCompleted;
        
        /// <remarks/>
        public event GetAvailableCreditByAccountIDCompletedEventHandler GetAvailableCreditByAccountIDCompleted;
        
        /// <remarks/>
        public event GetAvailableCreditByAccountNumberCompletedEventHandler GetAvailableCreditByAccountNumberCompleted;
        
        /// <remarks/>
        public event GetAccountIDByAccountNumberCompletedEventHandler GetAccountIDByAccountNumberCompleted;
        
        /// <remarks/>
        public event ShopperHasLOCCompletedEventHandler ShopperHasLOCCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountsForShopper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccountsForShopper(string sShopperID, out string sResultXML) {
            object[] results = this.Invoke("GetAccountsForShopper", new object[] {
                        sShopperID});
            sResultXML = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountsForShopperAsync(string sShopperID) {
            this.GetAccountsForShopperAsync(sShopperID, null);
        }
        
        /// <remarks/>
        public void GetAccountsForShopperAsync(string sShopperID, object userState) {
            if ((this.GetAccountsForShopperOperationCompleted == null)) {
                this.GetAccountsForShopperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountsForShopperOperationCompleted);
            }
            this.InvokeAsync("GetAccountsForShopper", new object[] {
                        sShopperID}, this.GetAccountsForShopperOperationCompleted, userState);
        }
        
        private void OnGetAccountsForShopperOperationCompleted(object arg) {
            if ((this.GetAccountsForShopperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountsForShopperCompleted(this, new GetAccountsForShopperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDetailsForAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDetailsForAccount(string sShopperID, int iAccountID, string sStartDate, string sEndDate, out string sResultXML) {
            object[] results = this.Invoke("GetDetailsForAccount", new object[] {
                        sShopperID,
                        iAccountID,
                        sStartDate,
                        sEndDate});
            sResultXML = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDetailsForAccountAsync(string sShopperID, int iAccountID, string sStartDate, string sEndDate) {
            this.GetDetailsForAccountAsync(sShopperID, iAccountID, sStartDate, sEndDate, null);
        }
        
        /// <remarks/>
        public void GetDetailsForAccountAsync(string sShopperID, int iAccountID, string sStartDate, string sEndDate, object userState) {
            if ((this.GetDetailsForAccountOperationCompleted == null)) {
                this.GetDetailsForAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDetailsForAccountOperationCompleted);
            }
            this.InvokeAsync("GetDetailsForAccount", new object[] {
                        sShopperID,
                        iAccountID,
                        sStartDate,
                        sEndDate}, this.GetDetailsForAccountOperationCompleted, userState);
        }
        
        private void OnGetDetailsForAccountOperationCompleted(object arg) {
            if ((this.GetDetailsForAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDetailsForAccountCompleted(this, new GetDetailsForAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAvailableCreditByAccountID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAvailableCreditByAccountID(string sShopperID, int iAccountID, out CurrencyAmount creditAvailable) {
            object[] results = this.Invoke("GetAvailableCreditByAccountID", new object[] {
                        sShopperID,
                        iAccountID});
            creditAvailable = ((CurrencyAmount)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableCreditByAccountIDAsync(string sShopperID, int iAccountID) {
            this.GetAvailableCreditByAccountIDAsync(sShopperID, iAccountID, null);
        }
        
        /// <remarks/>
        public void GetAvailableCreditByAccountIDAsync(string sShopperID, int iAccountID, object userState) {
            if ((this.GetAvailableCreditByAccountIDOperationCompleted == null)) {
                this.GetAvailableCreditByAccountIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableCreditByAccountIDOperationCompleted);
            }
            this.InvokeAsync("GetAvailableCreditByAccountID", new object[] {
                        sShopperID,
                        iAccountID}, this.GetAvailableCreditByAccountIDOperationCompleted, userState);
        }
        
        private void OnGetAvailableCreditByAccountIDOperationCompleted(object arg) {
            if ((this.GetAvailableCreditByAccountIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableCreditByAccountIDCompleted(this, new GetAvailableCreditByAccountIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAvailableCreditByAccountNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAvailableCreditByAccountNumber(string sShopperID, string sAccountNumber, out CurrencyAmount creditAvailable) {
            object[] results = this.Invoke("GetAvailableCreditByAccountNumber", new object[] {
                        sShopperID,
                        sAccountNumber});
            creditAvailable = ((CurrencyAmount)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableCreditByAccountNumberAsync(string sShopperID, string sAccountNumber) {
            this.GetAvailableCreditByAccountNumberAsync(sShopperID, sAccountNumber, null);
        }
        
        /// <remarks/>
        public void GetAvailableCreditByAccountNumberAsync(string sShopperID, string sAccountNumber, object userState) {
            if ((this.GetAvailableCreditByAccountNumberOperationCompleted == null)) {
                this.GetAvailableCreditByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableCreditByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetAvailableCreditByAccountNumber", new object[] {
                        sShopperID,
                        sAccountNumber}, this.GetAvailableCreditByAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetAvailableCreditByAccountNumberOperationCompleted(object arg) {
            if ((this.GetAvailableCreditByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableCreditByAccountNumberCompleted(this, new GetAvailableCreditByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountIDByAccountNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccountIDByAccountNumber(string sShopperID, string sAccountNumber, out int iAccountID) {
            object[] results = this.Invoke("GetAccountIDByAccountNumber", new object[] {
                        sShopperID,
                        sAccountNumber});
            iAccountID = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountIDByAccountNumberAsync(string sShopperID, string sAccountNumber) {
            this.GetAccountIDByAccountNumberAsync(sShopperID, sAccountNumber, null);
        }
        
        /// <remarks/>
        public void GetAccountIDByAccountNumberAsync(string sShopperID, string sAccountNumber, object userState) {
            if ((this.GetAccountIDByAccountNumberOperationCompleted == null)) {
                this.GetAccountIDByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountIDByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetAccountIDByAccountNumber", new object[] {
                        sShopperID,
                        sAccountNumber}, this.GetAccountIDByAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetAccountIDByAccountNumberOperationCompleted(object arg) {
            if ((this.GetAccountIDByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountIDByAccountNumberCompleted(this, new GetAccountIDByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShopperHasLOC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ShopperHasLOC(string sShopperID, out bool bShopperHasLOC) {
            object[] results = this.Invoke("ShopperHasLOC", new object[] {
                        sShopperID});
            bShopperHasLOC = ((bool)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ShopperHasLOCAsync(string sShopperID) {
            this.ShopperHasLOCAsync(sShopperID, null);
        }
        
        /// <remarks/>
        public void ShopperHasLOCAsync(string sShopperID, object userState) {
            if ((this.ShopperHasLOCOperationCompleted == null)) {
                this.ShopperHasLOCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShopperHasLOCOperationCompleted);
            }
            this.InvokeAsync("ShopperHasLOC", new object[] {
                        sShopperID}, this.ShopperHasLOCOperationCompleted, userState);
        }
        
        private void OnShopperHasLOCOperationCompleted(object arg) {
            if ((this.ShopperHasLOCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShopperHasLOCCompleted(this, new ShopperHasLOCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CurrencyAmount {
        
        private int iAmountField;
        
        private string sCurrencyField;
        
        /// <remarks/>
        public int iAmount {
            get {
                return this.iAmountField;
            }
            set {
                this.iAmountField = value;
            }
        }
        
        /// <remarks/>
        public string sCurrency {
            get {
                return this.sCurrencyField;
            }
            set {
                this.sCurrencyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAccountsForShopperCompletedEventHandler(object sender, GetAccountsForShopperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountsForShopperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountsForShopperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sResultXML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDetailsForAccountCompletedEventHandler(object sender, GetDetailsForAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDetailsForAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDetailsForAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sResultXML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAvailableCreditByAccountIDCompletedEventHandler(object sender, GetAvailableCreditByAccountIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableCreditByAccountIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableCreditByAccountIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CurrencyAmount creditAvailable {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyAmount)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAvailableCreditByAccountNumberCompletedEventHandler(object sender, GetAvailableCreditByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableCreditByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableCreditByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CurrencyAmount creditAvailable {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyAmount)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAccountIDByAccountNumberCompletedEventHandler(object sender, GetAccountIDByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountIDByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountIDByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int iAccountID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ShopperHasLOCCompletedEventHandler(object sender, ShopperHasLOCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShopperHasLOCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShopperHasLOCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool bShopperHasLOC {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591