//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.EcommProductAddOns.Impl.BillingStateSvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wscgdBillingStateServiceSoap", Namespace="urn:wscgdBillingStateService")]
    public partial class wscgdBillingStateService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback QueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildInfoByBundlePFIDOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wscgdBillingStateService() {
            this.Url = global::Atlantis.Framework.EcommProductAddOns.Impl.Properties.Settings.Default.Atlantis_Framework_EcommProductAddOns_Impl_BillingStateSvc_wscgdBillingStateService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event QueryCompletedEventHandler QueryCompleted;
        
        /// <remarks/>
        public event ChangeCompletedEventHandler ChangeCompleted;
        
        /// <remarks/>
        public event NewCompletedEventHandler NewCompleted;
        
        /// <remarks/>
        public event GetChildInfoByBundlePFIDCompletedEventHandler GetChildInfoByBundlePFIDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#Query", RequestNamespace="urn:wscgdBillingStateService", ResponseNamespace="urn:wscgdBillingStateService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int Query(string bstrResourceID, string bstrResourceType, string bstrIDType, out string pbstrResourceXML, out string pbstrError) {
            object[] results = this.Invoke("Query", new object[] {
                        bstrResourceID,
                        bstrResourceType,
                        bstrIDType});
            pbstrResourceXML = ((string)(results[1]));
            pbstrError = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAsync(string bstrResourceID, string bstrResourceType, string bstrIDType) {
            this.QueryAsync(bstrResourceID, bstrResourceType, bstrIDType, null);
        }
        
        /// <remarks/>
        public void QueryAsync(string bstrResourceID, string bstrResourceType, string bstrIDType, object userState) {
            if ((this.QueryOperationCompleted == null)) {
                this.QueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryOperationCompleted);
            }
            this.InvokeAsync("Query", new object[] {
                        bstrResourceID,
                        bstrResourceType,
                        bstrIDType}, this.QueryOperationCompleted, userState);
        }
        
        private void OnQueryOperationCompleted(object arg) {
            if ((this.QueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCompleted(this, new QueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#Change", RequestNamespace="urn:wscgdBillingStateService", ResponseNamespace="urn:wscgdBillingStateService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int Change(string bstrShopperID, string bstrChangeXML, string bstrItemRequestXML, int lRenewalPeriods, int lUnifiedRenewalPFID, out string pbstrError) {
            object[] results = this.Invoke("Change", new object[] {
                        bstrShopperID,
                        bstrChangeXML,
                        bstrItemRequestXML,
                        lRenewalPeriods,
                        lUnifiedRenewalPFID});
            pbstrError = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeAsync(string bstrShopperID, string bstrChangeXML, string bstrItemRequestXML, int lRenewalPeriods, int lUnifiedRenewalPFID) {
            this.ChangeAsync(bstrShopperID, bstrChangeXML, bstrItemRequestXML, lRenewalPeriods, lUnifiedRenewalPFID, null);
        }
        
        /// <remarks/>
        public void ChangeAsync(string bstrShopperID, string bstrChangeXML, string bstrItemRequestXML, int lRenewalPeriods, int lUnifiedRenewalPFID, object userState) {
            if ((this.ChangeOperationCompleted == null)) {
                this.ChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeOperationCompleted);
            }
            this.InvokeAsync("Change", new object[] {
                        bstrShopperID,
                        bstrChangeXML,
                        bstrItemRequestXML,
                        lRenewalPeriods,
                        lUnifiedRenewalPFID}, this.ChangeOperationCompleted, userState);
        }
        
        private void OnChangeOperationCompleted(object arg) {
            if ((this.ChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeCompleted(this, new ChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#New", RequestNamespace="urn:wscgdBillingStateService", ResponseNamespace="urn:wscgdBillingStateService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int New(string bstrShopperID, int lPrivateLabelID, string bstrNewXML, string bstrItemRequestXML, int lPurchasePeriods, out string pbstrCartShopperID, out string pbstrError) {
            object[] results = this.Invoke("New", new object[] {
                        bstrShopperID,
                        lPrivateLabelID,
                        bstrNewXML,
                        bstrItemRequestXML,
                        lPurchasePeriods});
            pbstrCartShopperID = ((string)(results[1]));
            pbstrError = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void NewAsync(string bstrShopperID, int lPrivateLabelID, string bstrNewXML, string bstrItemRequestXML, int lPurchasePeriods) {
            this.NewAsync(bstrShopperID, lPrivateLabelID, bstrNewXML, bstrItemRequestXML, lPurchasePeriods, null);
        }
        
        /// <remarks/>
        public void NewAsync(string bstrShopperID, int lPrivateLabelID, string bstrNewXML, string bstrItemRequestXML, int lPurchasePeriods, object userState) {
            if ((this.NewOperationCompleted == null)) {
                this.NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewOperationCompleted);
            }
            this.InvokeAsync("New", new object[] {
                        bstrShopperID,
                        lPrivateLabelID,
                        bstrNewXML,
                        bstrItemRequestXML,
                        lPurchasePeriods}, this.NewOperationCompleted, userState);
        }
        
        private void OnNewOperationCompleted(object arg) {
            if ((this.NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewCompleted(this, new NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetChildInfoByBundlePFID", RequestNamespace="urn:wscgdBillingStateService", ResponseNamespace="urn:wscgdBillingStateService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetChildInfoByBundlePFID(int lBundlePFID, out string pbstrError) {
            object[] results = this.Invoke("GetChildInfoByBundlePFID", new object[] {
                        lBundlePFID});
            pbstrError = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetChildInfoByBundlePFIDAsync(int lBundlePFID) {
            this.GetChildInfoByBundlePFIDAsync(lBundlePFID, null);
        }
        
        /// <remarks/>
        public void GetChildInfoByBundlePFIDAsync(int lBundlePFID, object userState) {
            if ((this.GetChildInfoByBundlePFIDOperationCompleted == null)) {
                this.GetChildInfoByBundlePFIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildInfoByBundlePFIDOperationCompleted);
            }
            this.InvokeAsync("GetChildInfoByBundlePFID", new object[] {
                        lBundlePFID}, this.GetChildInfoByBundlePFIDOperationCompleted, userState);
        }
        
        private void OnGetChildInfoByBundlePFIDOperationCompleted(object arg) {
            if ((this.GetChildInfoByBundlePFIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildInfoByBundlePFIDCompleted(this, new GetChildInfoByBundlePFIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryCompletedEventHandler(object sender, QueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrResourceXML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeCompletedEventHandler(object sender, ChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NewCompletedEventHandler(object sender, NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrCartShopperID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChildInfoByBundlePFIDCompletedEventHandler(object sender, GetChildInfoByBundlePFIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildInfoByBundlePFIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildInfoByBundlePFIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pbstrError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591