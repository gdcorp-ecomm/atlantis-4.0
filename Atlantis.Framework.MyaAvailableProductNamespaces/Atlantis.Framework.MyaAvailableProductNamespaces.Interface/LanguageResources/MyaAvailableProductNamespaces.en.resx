<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="myaNsdomain" xml:space="preserve">
    <value>Domain Name|mydomainname.com|A domain name registered under this account.</value>
    <comment>These values should be handled as separate values. Split by the pipe |</comment>
  </data>
  <data name="myaNsemail" xml:space="preserve">
    <value>Email Address|name@email.server.net|An email address set up using Email account credits purchased under this account.</value>
    <comment>These values should be handled as separate values. Split by the pipe |</comment>
  </data>
  <data name="myaNsemailfwd" xml:space="preserve">
    <value>Forwarded Email Address|forwardedname@email.server.net|An email address set up using Email account credits purchased under this account that is set up to forward to an alternate email address.</value>
    <comment>These values should be handled as separate values. Split by the pipe |</comment>
  </data>
  <data name="myaNsforwarding" xml:space="preserve">
    <value>Forwarded Domain Name|myforwarededomainname.com|A domain name registered under this account that is forwarded to an alternate URL.</value>
    <comment>These values should be handled as separate values. Split by the pipe |</comment>
  </data>
  <data name="myaNshosting" xml:space="preserve">
    <value>Hosted Domain Name|anydomainname.com|A domain name (not necessarily registered under this account) associated with a hosting account setup under this account.</value>
    <comment>These values should be handled as separate values. Split by the pipe |</comment>
  </data>
  <data name="myaNsparking" xml:space="preserve">
    <value>For Sale/One Page Website|my4saledomainname.com|A domain name that is set up as a for sale page or as a one-page Web site.</value>
    <comment>These values should be handled as separate values. Split by the pipe |</comment>
  </data>
  <data name="myaNsqsc" xml:space="preserve">
    <value>Quick Shopping Cart|anydomainname.com|A domain name (not necessarily registered under this account) associated with a Quick Shopping Cart account setup under this account.</value>
    <comment>These values should be handled as separate values. Split by the pipe |</comment>
  </data>
  <data name="myaNsreseller" xml:space="preserve">
    <value>Reseller|myprogid|The id used to log into a reseller account.</value>
    <comment>These values should be handled as separate values. Split by the pipe |</comment>
  </data>
  <data name="myaNssslcert" xml:space="preserve">
    <value>SSL Certificate|anydomainname.com|A domain name associated with an SSL certificate when the certificate was issued.</value>
    <comment>These values should be handled as separate values. Split by the pipe |</comment>
  </data>
  <data name="myaNstrafblazer" xml:space="preserve">
    <value>Search Engine Visibility|http://www.domain.com/anypage.asp|Web site URL submitted to search engines using Search Engine Visibility credits purchased with this account.</value>
    <comment>These values should be handled as separate values. Split by the pipe |</comment>
  </data>
  <data name="myaNsweblog" xml:space="preserve">
    <value>Quick Blogcast|anydomainname.com|A domain name (not necessarily registered under this account) associated with a Web Blog account setup under this account.</value>
    <comment>These values should be handled as separate values. Split by the pipe |</comment>
  </data>
  <data name="myaNswst" xml:space="preserve">
    <value>Website Builder|anydomainname.com|A domain name (not necessarily registered under this account) associated with a Website Builder account setup under this account.</value>
    <comment>These values should be handled as separate values. Split by the pipe |</comment>
  </data>
</root>