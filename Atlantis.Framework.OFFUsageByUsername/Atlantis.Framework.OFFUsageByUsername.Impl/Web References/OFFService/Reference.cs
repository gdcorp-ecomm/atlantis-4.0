//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.OFFUsageByUsername.Impl.OFFService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OFFSoapBinding", Namespace="urn:OFFSoapNS")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(File))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Folder))]
    public partial class OFFSoap : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback WorkspaceSoapServicegetUserByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkspaceSoapServicegetUserByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkspaceSoapServicegetUserByCredentialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkspaceSoapServicegetUserByUserNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkspaceSoapServicegetLoginURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkspaceSoapServicegetUploadWindowURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkspaceSoapServicecreateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkspaceSoapServicerenameFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkspaceSoapServicegetFileFromOFFOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkspaceSoapServicesendFileToOFFOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkspaceSoapServicemakeFilePublicOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkspaceSoapServicegetFolderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkspaceSoapServicegetFileListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OFFSoap() {
            this.Url = global::Atlantis.Framework.OFFUsageByUsername.Impl.Properties.Settings.Default.Atlantis_Framework_OFFUsageByUsername_Impl_OFFService_OFFSoap;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event WorkspaceSoapServicegetUserByEmailCompletedEventHandler WorkspaceSoapServicegetUserByEmailCompleted;
        
        /// <remarks/>
        public event WorkspaceSoapServicegetUserByUserIDCompletedEventHandler WorkspaceSoapServicegetUserByUserIDCompleted;
        
        /// <remarks/>
        public event WorkspaceSoapServicegetUserByCredentialsCompletedEventHandler WorkspaceSoapServicegetUserByCredentialsCompleted;
        
        /// <remarks/>
        public event WorkspaceSoapServicegetUserByUserNumCompletedEventHandler WorkspaceSoapServicegetUserByUserNumCompleted;
        
        /// <remarks/>
        public event WorkspaceSoapServicegetLoginURLCompletedEventHandler WorkspaceSoapServicegetLoginURLCompleted;
        
        /// <remarks/>
        public event WorkspaceSoapServicegetUploadWindowURLCompletedEventHandler WorkspaceSoapServicegetUploadWindowURLCompleted;
        
        /// <remarks/>
        public event WorkspaceSoapServicecreateFolderCompletedEventHandler WorkspaceSoapServicecreateFolderCompleted;
        
        /// <remarks/>
        public event WorkspaceSoapServicerenameFolderCompletedEventHandler WorkspaceSoapServicerenameFolderCompleted;
        
        /// <remarks/>
        public event WorkspaceSoapServicegetFileFromOFFCompletedEventHandler WorkspaceSoapServicegetFileFromOFFCompleted;
        
        /// <remarks/>
        public event WorkspaceSoapServicesendFileToOFFCompletedEventHandler WorkspaceSoapServicesendFileToOFFCompleted;
        
        /// <remarks/>
        public event WorkspaceSoapServicemakeFilePublicCompletedEventHandler WorkspaceSoapServicemakeFilePublicCompleted;
        
        /// <remarks/>
        public event WorkspaceSoapServicegetFolderListCompletedEventHandler WorkspaceSoapServicegetFolderListCompleted;
        
        /// <remarks/>
        public event WorkspaceSoapServicegetFileListCompletedEventHandler WorkspaceSoapServicegetFileListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:OFFSoapNS#getUserByEmail", RequestNamespace="urn:OFFSoapNS", ResponseNamespace="urn:OFFSoapNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("user")]
        public User WorkspaceSoapServicegetUserByEmail(string key, string email) {
            object[] results = this.Invoke("WorkspaceSoapServicegetUserByEmail", new object[] {
                        key,
                        email});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetUserByEmailAsync(string key, string email) {
            this.WorkspaceSoapServicegetUserByEmailAsync(key, email, null);
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetUserByEmailAsync(string key, string email, object userState) {
            if ((this.WorkspaceSoapServicegetUserByEmailOperationCompleted == null)) {
                this.WorkspaceSoapServicegetUserByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkspaceSoapServicegetUserByEmailOperationCompleted);
            }
            this.InvokeAsync("WorkspaceSoapServicegetUserByEmail", new object[] {
                        key,
                        email}, this.WorkspaceSoapServicegetUserByEmailOperationCompleted, userState);
        }
        
        private void OnWorkspaceSoapServicegetUserByEmailOperationCompleted(object arg) {
            if ((this.WorkspaceSoapServicegetUserByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkspaceSoapServicegetUserByEmailCompleted(this, new WorkspaceSoapServicegetUserByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:OFFSoapNS#getUserByUserID", RequestNamespace="urn:OFFSoapNS", ResponseNamespace="urn:OFFSoapNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("user")]
        public User WorkspaceSoapServicegetUserByUserID(string key, string user_id) {
            object[] results = this.Invoke("WorkspaceSoapServicegetUserByUserID", new object[] {
                        key,
                        user_id});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetUserByUserIDAsync(string key, string user_id) {
            this.WorkspaceSoapServicegetUserByUserIDAsync(key, user_id, null);
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetUserByUserIDAsync(string key, string user_id, object userState) {
            if ((this.WorkspaceSoapServicegetUserByUserIDOperationCompleted == null)) {
                this.WorkspaceSoapServicegetUserByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkspaceSoapServicegetUserByUserIDOperationCompleted);
            }
            this.InvokeAsync("WorkspaceSoapServicegetUserByUserID", new object[] {
                        key,
                        user_id}, this.WorkspaceSoapServicegetUserByUserIDOperationCompleted, userState);
        }
        
        private void OnWorkspaceSoapServicegetUserByUserIDOperationCompleted(object arg) {
            if ((this.WorkspaceSoapServicegetUserByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkspaceSoapServicegetUserByUserIDCompleted(this, new WorkspaceSoapServicegetUserByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:OFFSoapNS#getUserByCredentials", RequestNamespace="urn:OFFSoapNS", ResponseNamespace="urn:OFFSoapNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("user")]
        public User WorkspaceSoapServicegetUserByCredentials(string key, string user_id, string password) {
            object[] results = this.Invoke("WorkspaceSoapServicegetUserByCredentials", new object[] {
                        key,
                        user_id,
                        password});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetUserByCredentialsAsync(string key, string user_id, string password) {
            this.WorkspaceSoapServicegetUserByCredentialsAsync(key, user_id, password, null);
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetUserByCredentialsAsync(string key, string user_id, string password, object userState) {
            if ((this.WorkspaceSoapServicegetUserByCredentialsOperationCompleted == null)) {
                this.WorkspaceSoapServicegetUserByCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkspaceSoapServicegetUserByCredentialsOperationCompleted);
            }
            this.InvokeAsync("WorkspaceSoapServicegetUserByCredentials", new object[] {
                        key,
                        user_id,
                        password}, this.WorkspaceSoapServicegetUserByCredentialsOperationCompleted, userState);
        }
        
        private void OnWorkspaceSoapServicegetUserByCredentialsOperationCompleted(object arg) {
            if ((this.WorkspaceSoapServicegetUserByCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkspaceSoapServicegetUserByCredentialsCompleted(this, new WorkspaceSoapServicegetUserByCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:OFFSoapNS#getUserByUserNum", RequestNamespace="urn:OFFSoapNS", ResponseNamespace="urn:OFFSoapNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("user")]
        public User WorkspaceSoapServicegetUserByUserNum(string key, int user_num) {
            object[] results = this.Invoke("WorkspaceSoapServicegetUserByUserNum", new object[] {
                        key,
                        user_num});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetUserByUserNumAsync(string key, int user_num) {
            this.WorkspaceSoapServicegetUserByUserNumAsync(key, user_num, null);
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetUserByUserNumAsync(string key, int user_num, object userState) {
            if ((this.WorkspaceSoapServicegetUserByUserNumOperationCompleted == null)) {
                this.WorkspaceSoapServicegetUserByUserNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkspaceSoapServicegetUserByUserNumOperationCompleted);
            }
            this.InvokeAsync("WorkspaceSoapServicegetUserByUserNum", new object[] {
                        key,
                        user_num}, this.WorkspaceSoapServicegetUserByUserNumOperationCompleted, userState);
        }
        
        private void OnWorkspaceSoapServicegetUserByUserNumOperationCompleted(object arg) {
            if ((this.WorkspaceSoapServicegetUserByUserNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkspaceSoapServicegetUserByUserNumCompleted(this, new WorkspaceSoapServicegetUserByUserNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:OFFSoapNS#getLoginURL", RequestNamespace="urn:OFFSoapNS", ResponseNamespace="urn:OFFSoapNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("url")]
        public string WorkspaceSoapServicegetLoginURL(string key, int user_num) {
            object[] results = this.Invoke("WorkspaceSoapServicegetLoginURL", new object[] {
                        key,
                        user_num});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetLoginURLAsync(string key, int user_num) {
            this.WorkspaceSoapServicegetLoginURLAsync(key, user_num, null);
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetLoginURLAsync(string key, int user_num, object userState) {
            if ((this.WorkspaceSoapServicegetLoginURLOperationCompleted == null)) {
                this.WorkspaceSoapServicegetLoginURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkspaceSoapServicegetLoginURLOperationCompleted);
            }
            this.InvokeAsync("WorkspaceSoapServicegetLoginURL", new object[] {
                        key,
                        user_num}, this.WorkspaceSoapServicegetLoginURLOperationCompleted, userState);
        }
        
        private void OnWorkspaceSoapServicegetLoginURLOperationCompleted(object arg) {
            if ((this.WorkspaceSoapServicegetLoginURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkspaceSoapServicegetLoginURLCompleted(this, new WorkspaceSoapServicegetLoginURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:OFFSoapNS#getUploadWindowURL", RequestNamespace="urn:OFFSoapNS", ResponseNamespace="urn:OFFSoapNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("url")]
        public string WorkspaceSoapServicegetUploadWindowURL(string key, int user_num) {
            object[] results = this.Invoke("WorkspaceSoapServicegetUploadWindowURL", new object[] {
                        key,
                        user_num});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetUploadWindowURLAsync(string key, int user_num) {
            this.WorkspaceSoapServicegetUploadWindowURLAsync(key, user_num, null);
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetUploadWindowURLAsync(string key, int user_num, object userState) {
            if ((this.WorkspaceSoapServicegetUploadWindowURLOperationCompleted == null)) {
                this.WorkspaceSoapServicegetUploadWindowURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkspaceSoapServicegetUploadWindowURLOperationCompleted);
            }
            this.InvokeAsync("WorkspaceSoapServicegetUploadWindowURL", new object[] {
                        key,
                        user_num}, this.WorkspaceSoapServicegetUploadWindowURLOperationCompleted, userState);
        }
        
        private void OnWorkspaceSoapServicegetUploadWindowURLOperationCompleted(object arg) {
            if ((this.WorkspaceSoapServicegetUploadWindowURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkspaceSoapServicegetUploadWindowURLCompleted(this, new WorkspaceSoapServicegetUploadWindowURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:OFFSoapNS#createFolder", RequestNamespace="urn:OFFSoapNS", ResponseNamespace="urn:OFFSoapNS")]
        public void WorkspaceSoapServicecreateFolder(string key, int user_num, ref string folder_id, string folder_name) {
            object[] results = this.Invoke("WorkspaceSoapServicecreateFolder", new object[] {
                        key,
                        user_num,
                        folder_id,
                        folder_name});
            folder_id = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicecreateFolderAsync(string key, int user_num, string folder_id, string folder_name) {
            this.WorkspaceSoapServicecreateFolderAsync(key, user_num, folder_id, folder_name, null);
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicecreateFolderAsync(string key, int user_num, string folder_id, string folder_name, object userState) {
            if ((this.WorkspaceSoapServicecreateFolderOperationCompleted == null)) {
                this.WorkspaceSoapServicecreateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkspaceSoapServicecreateFolderOperationCompleted);
            }
            this.InvokeAsync("WorkspaceSoapServicecreateFolder", new object[] {
                        key,
                        user_num,
                        folder_id,
                        folder_name}, this.WorkspaceSoapServicecreateFolderOperationCompleted, userState);
        }
        
        private void OnWorkspaceSoapServicecreateFolderOperationCompleted(object arg) {
            if ((this.WorkspaceSoapServicecreateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkspaceSoapServicecreateFolderCompleted(this, new WorkspaceSoapServicecreateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:OFFSoapNS#renameFolder", RequestNamespace="urn:OFFSoapNS", ResponseNamespace="urn:OFFSoapNS")]
        public void WorkspaceSoapServicerenameFolder(string key, int user_num, string folder_id, ref string folder_name) {
            object[] results = this.Invoke("WorkspaceSoapServicerenameFolder", new object[] {
                        key,
                        user_num,
                        folder_id,
                        folder_name});
            folder_name = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicerenameFolderAsync(string key, int user_num, string folder_id, string folder_name) {
            this.WorkspaceSoapServicerenameFolderAsync(key, user_num, folder_id, folder_name, null);
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicerenameFolderAsync(string key, int user_num, string folder_id, string folder_name, object userState) {
            if ((this.WorkspaceSoapServicerenameFolderOperationCompleted == null)) {
                this.WorkspaceSoapServicerenameFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkspaceSoapServicerenameFolderOperationCompleted);
            }
            this.InvokeAsync("WorkspaceSoapServicerenameFolder", new object[] {
                        key,
                        user_num,
                        folder_id,
                        folder_name}, this.WorkspaceSoapServicerenameFolderOperationCompleted, userState);
        }
        
        private void OnWorkspaceSoapServicerenameFolderOperationCompleted(object arg) {
            if ((this.WorkspaceSoapServicerenameFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkspaceSoapServicerenameFolderCompleted(this, new WorkspaceSoapServicerenameFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:OFFSoapNS#getFileFromOFF", RequestNamespace="urn:OFFSoapNS", ResponseNamespace="urn:OFFSoapNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("download_url")]
        public string WorkspaceSoapServicegetFileFromOFF(string key, int user_num, string file_id) {
            object[] results = this.Invoke("WorkspaceSoapServicegetFileFromOFF", new object[] {
                        key,
                        user_num,
                        file_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetFileFromOFFAsync(string key, int user_num, string file_id) {
            this.WorkspaceSoapServicegetFileFromOFFAsync(key, user_num, file_id, null);
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetFileFromOFFAsync(string key, int user_num, string file_id, object userState) {
            if ((this.WorkspaceSoapServicegetFileFromOFFOperationCompleted == null)) {
                this.WorkspaceSoapServicegetFileFromOFFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkspaceSoapServicegetFileFromOFFOperationCompleted);
            }
            this.InvokeAsync("WorkspaceSoapServicegetFileFromOFF", new object[] {
                        key,
                        user_num,
                        file_id}, this.WorkspaceSoapServicegetFileFromOFFOperationCompleted, userState);
        }
        
        private void OnWorkspaceSoapServicegetFileFromOFFOperationCompleted(object arg) {
            if ((this.WorkspaceSoapServicegetFileFromOFFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkspaceSoapServicegetFileFromOFFCompleted(this, new WorkspaceSoapServicegetFileFromOFFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:OFFSoapNS#sendFileToOFF", RequestNamespace="urn:OFFSoapNS", ResponseNamespace="urn:OFFSoapNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("file_id")]
        public string WorkspaceSoapServicesendFileToOFF(string key, int user_num, string folder_id, string file_name, string file_url) {
            object[] results = this.Invoke("WorkspaceSoapServicesendFileToOFF", new object[] {
                        key,
                        user_num,
                        folder_id,
                        file_name,
                        file_url});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicesendFileToOFFAsync(string key, int user_num, string folder_id, string file_name, string file_url) {
            this.WorkspaceSoapServicesendFileToOFFAsync(key, user_num, folder_id, file_name, file_url, null);
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicesendFileToOFFAsync(string key, int user_num, string folder_id, string file_name, string file_url, object userState) {
            if ((this.WorkspaceSoapServicesendFileToOFFOperationCompleted == null)) {
                this.WorkspaceSoapServicesendFileToOFFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkspaceSoapServicesendFileToOFFOperationCompleted);
            }
            this.InvokeAsync("WorkspaceSoapServicesendFileToOFF", new object[] {
                        key,
                        user_num,
                        folder_id,
                        file_name,
                        file_url}, this.WorkspaceSoapServicesendFileToOFFOperationCompleted, userState);
        }
        
        private void OnWorkspaceSoapServicesendFileToOFFOperationCompleted(object arg) {
            if ((this.WorkspaceSoapServicesendFileToOFFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkspaceSoapServicesendFileToOFFCompleted(this, new WorkspaceSoapServicesendFileToOFFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:OFFSoapNS#makeFilePublic", RequestNamespace="urn:OFFSoapNS", ResponseNamespace="urn:OFFSoapNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("public_url")]
        public string WorkspaceSoapServicemakeFilePublic(string key, int user_num, string file_id) {
            object[] results = this.Invoke("WorkspaceSoapServicemakeFilePublic", new object[] {
                        key,
                        user_num,
                        file_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicemakeFilePublicAsync(string key, int user_num, string file_id) {
            this.WorkspaceSoapServicemakeFilePublicAsync(key, user_num, file_id, null);
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicemakeFilePublicAsync(string key, int user_num, string file_id, object userState) {
            if ((this.WorkspaceSoapServicemakeFilePublicOperationCompleted == null)) {
                this.WorkspaceSoapServicemakeFilePublicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkspaceSoapServicemakeFilePublicOperationCompleted);
            }
            this.InvokeAsync("WorkspaceSoapServicemakeFilePublic", new object[] {
                        key,
                        user_num,
                        file_id}, this.WorkspaceSoapServicemakeFilePublicOperationCompleted, userState);
        }
        
        private void OnWorkspaceSoapServicemakeFilePublicOperationCompleted(object arg) {
            if ((this.WorkspaceSoapServicemakeFilePublicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkspaceSoapServicemakeFilePublicCompleted(this, new WorkspaceSoapServicemakeFilePublicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:OFFSoapNS#getFolderList", RequestNamespace="urn:OFFSoapNS", ResponseNamespace="urn:OFFSoapNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("folders")]
        public Folder[] WorkspaceSoapServicegetFolderList(string key, int user_num, string folder_id) {
            object[] results = this.Invoke("WorkspaceSoapServicegetFolderList", new object[] {
                        key,
                        user_num,
                        folder_id});
            return ((Folder[])(results[0]));
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetFolderListAsync(string key, int user_num, string folder_id) {
            this.WorkspaceSoapServicegetFolderListAsync(key, user_num, folder_id, null);
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetFolderListAsync(string key, int user_num, string folder_id, object userState) {
            if ((this.WorkspaceSoapServicegetFolderListOperationCompleted == null)) {
                this.WorkspaceSoapServicegetFolderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkspaceSoapServicegetFolderListOperationCompleted);
            }
            this.InvokeAsync("WorkspaceSoapServicegetFolderList", new object[] {
                        key,
                        user_num,
                        folder_id}, this.WorkspaceSoapServicegetFolderListOperationCompleted, userState);
        }
        
        private void OnWorkspaceSoapServicegetFolderListOperationCompleted(object arg) {
            if ((this.WorkspaceSoapServicegetFolderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkspaceSoapServicegetFolderListCompleted(this, new WorkspaceSoapServicegetFolderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:OFFSoapNS#getFileList", RequestNamespace="urn:OFFSoapNS", ResponseNamespace="urn:OFFSoapNS")]
        [return: System.Xml.Serialization.SoapElementAttribute("files")]
        public File[] WorkspaceSoapServicegetFileList(string key, int user_num, string folder_id) {
            object[] results = this.Invoke("WorkspaceSoapServicegetFileList", new object[] {
                        key,
                        user_num,
                        folder_id});
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetFileListAsync(string key, int user_num, string folder_id) {
            this.WorkspaceSoapServicegetFileListAsync(key, user_num, folder_id, null);
        }
        
        /// <remarks/>
        public void WorkspaceSoapServicegetFileListAsync(string key, int user_num, string folder_id, object userState) {
            if ((this.WorkspaceSoapServicegetFileListOperationCompleted == null)) {
                this.WorkspaceSoapServicegetFileListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkspaceSoapServicegetFileListOperationCompleted);
            }
            this.InvokeAsync("WorkspaceSoapServicegetFileList", new object[] {
                        key,
                        user_num,
                        folder_id}, this.WorkspaceSoapServicegetFileListOperationCompleted, userState);
        }
        
        private void OnWorkspaceSoapServicegetFileListOperationCompleted(object arg) {
            if ((this.WorkspaceSoapServicegetFileListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkspaceSoapServicegetFileListCompleted(this, new WorkspaceSoapServicegetFileListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:OFFSoapNS")]
    public partial class User {
        
        private float user_numField;
        
        private string user_idField;
        
        private string typeField;
        
        private string statusField;
        
        private string associated_emailField;
        
        private string expiration_dateField;
        
        private string deletion_dateField;
        
        private float quota_bytesField;
        
        private float used_bytesField;
        
        private float home_folder_idField;
        
        /// <remarks/>
        public float user_num {
            get {
                return this.user_numField;
            }
            set {
                this.user_numField = value;
            }
        }
        
        /// <remarks/>
        public string user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string associated_email {
            get {
                return this.associated_emailField;
            }
            set {
                this.associated_emailField = value;
            }
        }
        
        /// <remarks/>
        public string expiration_date {
            get {
                return this.expiration_dateField;
            }
            set {
                this.expiration_dateField = value;
            }
        }
        
        /// <remarks/>
        public string deletion_date {
            get {
                return this.deletion_dateField;
            }
            set {
                this.deletion_dateField = value;
            }
        }
        
        /// <remarks/>
        public float quota_bytes {
            get {
                return this.quota_bytesField;
            }
            set {
                this.quota_bytesField = value;
            }
        }
        
        /// <remarks/>
        public float used_bytes {
            get {
                return this.used_bytesField;
            }
            set {
                this.used_bytesField = value;
            }
        }
        
        /// <remarks/>
        public float home_folder_id {
            get {
                return this.home_folder_idField;
            }
            set {
                this.home_folder_idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:OFFSoapNS")]
    public partial class File {
        
        private string file_idField;
        
        private string folder_idField;
        
        private string file_nameField;
        
        private string file_sizeField;
        
        private string modifiedField;
        
        private float flagsField;
        
        private string large_iconField;
        
        private string small_iconField;
        
        /// <remarks/>
        public string file_id {
            get {
                return this.file_idField;
            }
            set {
                this.file_idField = value;
            }
        }
        
        /// <remarks/>
        public string folder_id {
            get {
                return this.folder_idField;
            }
            set {
                this.folder_idField = value;
            }
        }
        
        /// <remarks/>
        public string file_name {
            get {
                return this.file_nameField;
            }
            set {
                this.file_nameField = value;
            }
        }
        
        /// <remarks/>
        public string file_size {
            get {
                return this.file_sizeField;
            }
            set {
                this.file_sizeField = value;
            }
        }
        
        /// <remarks/>
        public string modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public float flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <remarks/>
        public string large_icon {
            get {
                return this.large_iconField;
            }
            set {
                this.large_iconField = value;
            }
        }
        
        /// <remarks/>
        public string small_icon {
            get {
                return this.small_iconField;
            }
            set {
                this.small_iconField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:OFFSoapNS")]
    public partial class Folder {
        
        private string folder_idField;
        
        private string parent_folder_idField;
        
        private string folder_nameField;
        
        private string modifiedField;
        
        private float used_countField;
        
        private string large_iconField;
        
        private string small_iconField;
        
        /// <remarks/>
        public string folder_id {
            get {
                return this.folder_idField;
            }
            set {
                this.folder_idField = value;
            }
        }
        
        /// <remarks/>
        public string parent_folder_id {
            get {
                return this.parent_folder_idField;
            }
            set {
                this.parent_folder_idField = value;
            }
        }
        
        /// <remarks/>
        public string folder_name {
            get {
                return this.folder_nameField;
            }
            set {
                this.folder_nameField = value;
            }
        }
        
        /// <remarks/>
        public string modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public float used_count {
            get {
                return this.used_countField;
            }
            set {
                this.used_countField = value;
            }
        }
        
        /// <remarks/>
        public string large_icon {
            get {
                return this.large_iconField;
            }
            set {
                this.large_iconField = value;
            }
        }
        
        /// <remarks/>
        public string small_icon {
            get {
                return this.small_iconField;
            }
            set {
                this.small_iconField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WorkspaceSoapServicegetUserByEmailCompletedEventHandler(object sender, WorkspaceSoapServicegetUserByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkspaceSoapServicegetUserByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkspaceSoapServicegetUserByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WorkspaceSoapServicegetUserByUserIDCompletedEventHandler(object sender, WorkspaceSoapServicegetUserByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkspaceSoapServicegetUserByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkspaceSoapServicegetUserByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WorkspaceSoapServicegetUserByCredentialsCompletedEventHandler(object sender, WorkspaceSoapServicegetUserByCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkspaceSoapServicegetUserByCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkspaceSoapServicegetUserByCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WorkspaceSoapServicegetUserByUserNumCompletedEventHandler(object sender, WorkspaceSoapServicegetUserByUserNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkspaceSoapServicegetUserByUserNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkspaceSoapServicegetUserByUserNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WorkspaceSoapServicegetLoginURLCompletedEventHandler(object sender, WorkspaceSoapServicegetLoginURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkspaceSoapServicegetLoginURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkspaceSoapServicegetLoginURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WorkspaceSoapServicegetUploadWindowURLCompletedEventHandler(object sender, WorkspaceSoapServicegetUploadWindowURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkspaceSoapServicegetUploadWindowURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkspaceSoapServicegetUploadWindowURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WorkspaceSoapServicecreateFolderCompletedEventHandler(object sender, WorkspaceSoapServicecreateFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkspaceSoapServicecreateFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkspaceSoapServicecreateFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string folder_id {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WorkspaceSoapServicerenameFolderCompletedEventHandler(object sender, WorkspaceSoapServicerenameFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkspaceSoapServicerenameFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkspaceSoapServicerenameFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string folder_name {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WorkspaceSoapServicegetFileFromOFFCompletedEventHandler(object sender, WorkspaceSoapServicegetFileFromOFFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkspaceSoapServicegetFileFromOFFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkspaceSoapServicegetFileFromOFFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WorkspaceSoapServicesendFileToOFFCompletedEventHandler(object sender, WorkspaceSoapServicesendFileToOFFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkspaceSoapServicesendFileToOFFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkspaceSoapServicesendFileToOFFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WorkspaceSoapServicemakeFilePublicCompletedEventHandler(object sender, WorkspaceSoapServicemakeFilePublicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkspaceSoapServicemakeFilePublicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkspaceSoapServicemakeFilePublicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WorkspaceSoapServicegetFolderListCompletedEventHandler(object sender, WorkspaceSoapServicegetFolderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkspaceSoapServicegetFolderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkspaceSoapServicegetFolderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Folder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Folder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WorkspaceSoapServicegetFileListCompletedEventHandler(object sender, WorkspaceSoapServicegetFileListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkspaceSoapServicegetFileListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkspaceSoapServicegetFileListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591