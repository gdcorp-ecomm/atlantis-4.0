//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.PayeeProfilesList.Impl.PayeeWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetEnumerationDescriptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountsForShopperOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShopperHasAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPayabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyExternalAccountAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExternalAccountProviderAuthDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Atlantis.Framework.PayeeProfilesList.Impl.Properties.Settings.Default.Atlantis_Framework_PayeeProfilesList_Impl_PayeeWS_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetEnumerationDescriptionsCompletedEventHandler GetEnumerationDescriptionsCompleted;
        
        /// <remarks/>
        public event UpdateAccountCompletedEventHandler UpdateAccountCompleted;
        
        /// <remarks/>
        public event AddAccountCompletedEventHandler AddAccountCompleted;
        
        /// <remarks/>
        public event GetAccountsForShopperCompletedEventHandler GetAccountsForShopperCompleted;
        
        /// <remarks/>
        public event GetAccountDetailCompletedEventHandler GetAccountDetailCompleted;
        
        /// <remarks/>
        public event ShopperHasAccountCompletedEventHandler ShopperHasAccountCompleted;
        
        /// <remarks/>
        public event SetPayabilityCompletedEventHandler SetPayabilityCompleted;
        
        /// <remarks/>
        public event NotifyExternalAccountAccessCompletedEventHandler NotifyExternalAccountAccessCompleted;
        
        /// <remarks/>
        public event GetExternalAccountProviderAuthDataCompletedEventHandler GetExternalAccountProviderAuthDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEnumerationDescriptions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEnumerationDescriptions(string sType) {
            object[] results = this.Invoke("GetEnumerationDescriptions", new object[] {
                        sType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEnumerationDescriptionsAsync(string sType) {
            this.GetEnumerationDescriptionsAsync(sType, null);
        }
        
        /// <remarks/>
        public void GetEnumerationDescriptionsAsync(string sType, object userState) {
            if ((this.GetEnumerationDescriptionsOperationCompleted == null)) {
                this.GetEnumerationDescriptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEnumerationDescriptionsOperationCompleted);
            }
            this.InvokeAsync("GetEnumerationDescriptions", new object[] {
                        sType}, this.GetEnumerationDescriptionsOperationCompleted, userState);
        }
        
        private void OnGetEnumerationDescriptionsOperationCompleted(object arg) {
            if ((this.GetEnumerationDescriptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEnumerationDescriptionsCompleted(this, new GetEnumerationDescriptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAccount(string sUpdateXML) {
            object[] results = this.Invoke("UpdateAccount", new object[] {
                        sUpdateXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccountAsync(string sUpdateXML) {
            this.UpdateAccountAsync(sUpdateXML, null);
        }
        
        /// <remarks/>
        public void UpdateAccountAsync(string sUpdateXML, object userState) {
            if ((this.UpdateAccountOperationCompleted == null)) {
                this.UpdateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountOperationCompleted);
            }
            this.InvokeAsync("UpdateAccount", new object[] {
                        sUpdateXML}, this.UpdateAccountOperationCompleted, userState);
        }
        
        private void OnUpdateAccountOperationCompleted(object arg) {
            if ((this.UpdateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountCompleted(this, new UpdateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddAccount(string sAddXML) {
            object[] results = this.Invoke("AddAccount", new object[] {
                        sAddXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAccountAsync(string sAddXML) {
            this.AddAccountAsync(sAddXML, null);
        }
        
        /// <remarks/>
        public void AddAccountAsync(string sAddXML, object userState) {
            if ((this.AddAccountOperationCompleted == null)) {
                this.AddAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAccountOperationCompleted);
            }
            this.InvokeAsync("AddAccount", new object[] {
                        sAddXML}, this.AddAccountOperationCompleted, userState);
        }
        
        private void OnAddAccountOperationCompleted(object arg) {
            if ((this.AddAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAccountCompleted(this, new AddAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountsForShopper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccountsForShopper(string sShopperID) {
            object[] results = this.Invoke("GetAccountsForShopper", new object[] {
                        sShopperID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountsForShopperAsync(string sShopperID) {
            this.GetAccountsForShopperAsync(sShopperID, null);
        }
        
        /// <remarks/>
        public void GetAccountsForShopperAsync(string sShopperID, object userState) {
            if ((this.GetAccountsForShopperOperationCompleted == null)) {
                this.GetAccountsForShopperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountsForShopperOperationCompleted);
            }
            this.InvokeAsync("GetAccountsForShopper", new object[] {
                        sShopperID}, this.GetAccountsForShopperOperationCompleted, userState);
        }
        
        private void OnGetAccountsForShopperOperationCompleted(object arg) {
            if ((this.GetAccountsForShopperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountsForShopperCompleted(this, new GetAccountsForShopperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccountDetail(string sShopperID, int iCAPID) {
            object[] results = this.Invoke("GetAccountDetail", new object[] {
                        sShopperID,
                        iCAPID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountDetailAsync(string sShopperID, int iCAPID) {
            this.GetAccountDetailAsync(sShopperID, iCAPID, null);
        }
        
        /// <remarks/>
        public void GetAccountDetailAsync(string sShopperID, int iCAPID, object userState) {
            if ((this.GetAccountDetailOperationCompleted == null)) {
                this.GetAccountDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountDetailOperationCompleted);
            }
            this.InvokeAsync("GetAccountDetail", new object[] {
                        sShopperID,
                        iCAPID}, this.GetAccountDetailOperationCompleted, userState);
        }
        
        private void OnGetAccountDetailOperationCompleted(object arg) {
            if ((this.GetAccountDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountDetailCompleted(this, new GetAccountDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShopperHasAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ShopperHasAccount(string sShopperID, out string sErrorDesc) {
            object[] results = this.Invoke("ShopperHasAccount", new object[] {
                        sShopperID});
            sErrorDesc = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ShopperHasAccountAsync(string sShopperID) {
            this.ShopperHasAccountAsync(sShopperID, null);
        }
        
        /// <remarks/>
        public void ShopperHasAccountAsync(string sShopperID, object userState) {
            if ((this.ShopperHasAccountOperationCompleted == null)) {
                this.ShopperHasAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShopperHasAccountOperationCompleted);
            }
            this.InvokeAsync("ShopperHasAccount", new object[] {
                        sShopperID}, this.ShopperHasAccountOperationCompleted, userState);
        }
        
        private void OnShopperHasAccountOperationCompleted(object arg) {
            if ((this.ShopperHasAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShopperHasAccountCompleted(this, new ShopperHasAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetPayability", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetPayability(int iCAPID, bool bIsPayable, string sNonPayableReason) {
            object[] results = this.Invoke("SetPayability", new object[] {
                        iCAPID,
                        bIsPayable,
                        sNonPayableReason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetPayabilityAsync(int iCAPID, bool bIsPayable, string sNonPayableReason) {
            this.SetPayabilityAsync(iCAPID, bIsPayable, sNonPayableReason, null);
        }
        
        /// <remarks/>
        public void SetPayabilityAsync(int iCAPID, bool bIsPayable, string sNonPayableReason, object userState) {
            if ((this.SetPayabilityOperationCompleted == null)) {
                this.SetPayabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPayabilityOperationCompleted);
            }
            this.InvokeAsync("SetPayability", new object[] {
                        iCAPID,
                        bIsPayable,
                        sNonPayableReason}, this.SetPayabilityOperationCompleted, userState);
        }
        
        private void OnSetPayabilityOperationCompleted(object arg) {
            if ((this.SetPayabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPayabilityCompleted(this, new SetPayabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyExternalAccountAccess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NotifyExternalAccountAccess(string sShopperID, int iCAPID, string sAddlData) {
            object[] results = this.Invoke("NotifyExternalAccountAccess", new object[] {
                        sShopperID,
                        iCAPID,
                        sAddlData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyExternalAccountAccessAsync(string sShopperID, int iCAPID, string sAddlData) {
            this.NotifyExternalAccountAccessAsync(sShopperID, iCAPID, sAddlData, null);
        }
        
        /// <remarks/>
        public void NotifyExternalAccountAccessAsync(string sShopperID, int iCAPID, string sAddlData, object userState) {
            if ((this.NotifyExternalAccountAccessOperationCompleted == null)) {
                this.NotifyExternalAccountAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyExternalAccountAccessOperationCompleted);
            }
            this.InvokeAsync("NotifyExternalAccountAccess", new object[] {
                        sShopperID,
                        iCAPID,
                        sAddlData}, this.NotifyExternalAccountAccessOperationCompleted, userState);
        }
        
        private void OnNotifyExternalAccountAccessOperationCompleted(object arg) {
            if ((this.NotifyExternalAccountAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyExternalAccountAccessCompleted(this, new NotifyExternalAccountAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExternalAccountProviderAuthData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExternalAccountProviderAuthData(string sShopperID, int iPaymentMethodID, string sAddlData) {
            object[] results = this.Invoke("GetExternalAccountProviderAuthData", new object[] {
                        sShopperID,
                        iPaymentMethodID,
                        sAddlData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExternalAccountProviderAuthDataAsync(string sShopperID, int iPaymentMethodID, string sAddlData) {
            this.GetExternalAccountProviderAuthDataAsync(sShopperID, iPaymentMethodID, sAddlData, null);
        }
        
        /// <remarks/>
        public void GetExternalAccountProviderAuthDataAsync(string sShopperID, int iPaymentMethodID, string sAddlData, object userState) {
            if ((this.GetExternalAccountProviderAuthDataOperationCompleted == null)) {
                this.GetExternalAccountProviderAuthDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExternalAccountProviderAuthDataOperationCompleted);
            }
            this.InvokeAsync("GetExternalAccountProviderAuthData", new object[] {
                        sShopperID,
                        iPaymentMethodID,
                        sAddlData}, this.GetExternalAccountProviderAuthDataOperationCompleted, userState);
        }
        
        private void OnGetExternalAccountProviderAuthDataOperationCompleted(object arg) {
            if ((this.GetExternalAccountProviderAuthDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExternalAccountProviderAuthDataCompleted(this, new GetExternalAccountProviderAuthDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEnumerationDescriptionsCompletedEventHandler(object sender, GetEnumerationDescriptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEnumerationDescriptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEnumerationDescriptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateAccountCompletedEventHandler(object sender, UpdateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddAccountCompletedEventHandler(object sender, AddAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAccountsForShopperCompletedEventHandler(object sender, GetAccountsForShopperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountsForShopperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountsForShopperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAccountDetailCompletedEventHandler(object sender, GetAccountDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ShopperHasAccountCompletedEventHandler(object sender, ShopperHasAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShopperHasAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShopperHasAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sErrorDesc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetPayabilityCompletedEventHandler(object sender, SetPayabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPayabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPayabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void NotifyExternalAccountAccessCompletedEventHandler(object sender, NotifyExternalAccountAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyExternalAccountAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyExternalAccountAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetExternalAccountProviderAuthDataCompletedEventHandler(object sender, GetExternalAccountProviderAuthDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExternalAccountProviderAuthDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExternalAccountProviderAuthDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591