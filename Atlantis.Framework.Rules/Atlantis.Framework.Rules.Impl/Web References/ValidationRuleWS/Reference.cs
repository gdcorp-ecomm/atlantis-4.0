//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.Rules.Impl.ValidationRuleWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="httpsBinding_IgdValidationRuleWebSvc", Namespace="http://godaddy.com")]
    public partial class gdValidationRuleWebSvc : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetRuleMainByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRuleMainNameByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetRuleMainAttributesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRuleMainByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback EvaluateRuleMainOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRuleByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetRuleAttributesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRuleByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFactByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetFactAttributesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFactByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public gdValidationRuleWebSvc() {
            this.Url = global::Atlantis.Framework.Rules.Impl.Properties.Settings.Default.Atlantis_Framework_Rules_Impl_ValidationRuleWS_gdValidationRuleWebSvc;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetRuleMainByNameCompletedEventHandler GetRuleMainByNameCompleted;
        
        /// <remarks/>
        public event GetRuleMainNameByIdCompletedEventHandler GetRuleMainNameByIdCompleted;
        
        /// <remarks/>
        public event SetRuleMainAttributesCompletedEventHandler SetRuleMainAttributesCompleted;
        
        /// <remarks/>
        public event DeleteRuleMainByNameCompletedEventHandler DeleteRuleMainByNameCompleted;
        
        /// <remarks/>
        public event EvaluateRuleMainCompletedEventHandler EvaluateRuleMainCompleted;
        
        /// <remarks/>
        public event GetRuleByNameCompletedEventHandler GetRuleByNameCompleted;
        
        /// <remarks/>
        public event SetRuleAttributesCompletedEventHandler SetRuleAttributesCompleted;
        
        /// <remarks/>
        public event DeleteRuleByNameCompletedEventHandler DeleteRuleByNameCompleted;
        
        /// <remarks/>
        public event GetFactByNameCompletedEventHandler GetFactByNameCompleted;
        
        /// <remarks/>
        public event SetFactAttributesCompletedEventHandler SetFactAttributesCompleted;
        
        /// <remarks/>
        public event DeleteFactByNameCompletedEventHandler DeleteFactByNameCompleted;
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event TestCompletedEventHandler TestCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://godaddy.com/IgdValidationRuleWebSvc/GetRuleMainByName", RequestNamespace="http://godaddy.com", ResponseNamespace="http://godaddy.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetRuleMainByName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RuleMainName) {
            object[] results = this.Invoke("GetRuleMainByName", new object[] {
                        RuleMainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRuleMainByNameAsync(string RuleMainName) {
            this.GetRuleMainByNameAsync(RuleMainName, null);
        }
        
        /// <remarks/>
        public void GetRuleMainByNameAsync(string RuleMainName, object userState) {
            if ((this.GetRuleMainByNameOperationCompleted == null)) {
                this.GetRuleMainByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRuleMainByNameOperationCompleted);
            }
            this.InvokeAsync("GetRuleMainByName", new object[] {
                        RuleMainName}, this.GetRuleMainByNameOperationCompleted, userState);
        }
        
        private void OnGetRuleMainByNameOperationCompleted(object arg) {
            if ((this.GetRuleMainByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRuleMainByNameCompleted(this, new GetRuleMainByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://godaddy.com/IgdValidationRuleWebSvc/GetRuleMainNameById", RequestNamespace="http://godaddy.com", ResponseNamespace="http://godaddy.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetRuleMainNameById(int RuleMainId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool RuleMainIdSpecified) {
            object[] results = this.Invoke("GetRuleMainNameById", new object[] {
                        RuleMainId,
                        RuleMainIdSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRuleMainNameByIdAsync(int RuleMainId, bool RuleMainIdSpecified) {
            this.GetRuleMainNameByIdAsync(RuleMainId, RuleMainIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetRuleMainNameByIdAsync(int RuleMainId, bool RuleMainIdSpecified, object userState) {
            if ((this.GetRuleMainNameByIdOperationCompleted == null)) {
                this.GetRuleMainNameByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRuleMainNameByIdOperationCompleted);
            }
            this.InvokeAsync("GetRuleMainNameById", new object[] {
                        RuleMainId,
                        RuleMainIdSpecified}, this.GetRuleMainNameByIdOperationCompleted, userState);
        }
        
        private void OnGetRuleMainNameByIdOperationCompleted(object arg) {
            if ((this.GetRuleMainNameByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRuleMainNameByIdCompleted(this, new GetRuleMainNameByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://godaddy.com/IgdValidationRuleWebSvc/SetRuleMainAttributes", RequestNamespace="http://godaddy.com", ResponseNamespace="http://godaddy.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SetRuleMainAttributes([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RuleMainName, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] ExecuteRuleNames) {
            object[] results = this.Invoke("SetRuleMainAttributes", new object[] {
                        RuleMainName,
                        ExecuteRuleNames});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetRuleMainAttributesAsync(string RuleMainName, string[] ExecuteRuleNames) {
            this.SetRuleMainAttributesAsync(RuleMainName, ExecuteRuleNames, null);
        }
        
        /// <remarks/>
        public void SetRuleMainAttributesAsync(string RuleMainName, string[] ExecuteRuleNames, object userState) {
            if ((this.SetRuleMainAttributesOperationCompleted == null)) {
                this.SetRuleMainAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRuleMainAttributesOperationCompleted);
            }
            this.InvokeAsync("SetRuleMainAttributes", new object[] {
                        RuleMainName,
                        ExecuteRuleNames}, this.SetRuleMainAttributesOperationCompleted, userState);
        }
        
        private void OnSetRuleMainAttributesOperationCompleted(object arg) {
            if ((this.SetRuleMainAttributesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetRuleMainAttributesCompleted(this, new SetRuleMainAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://godaddy.com/IgdValidationRuleWebSvc/DeleteRuleMainByName", RequestNamespace="http://godaddy.com", ResponseNamespace="http://godaddy.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeleteRuleMainByName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RuleMainName) {
            object[] results = this.Invoke("DeleteRuleMainByName", new object[] {
                        RuleMainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRuleMainByNameAsync(string RuleMainName) {
            this.DeleteRuleMainByNameAsync(RuleMainName, null);
        }
        
        /// <remarks/>
        public void DeleteRuleMainByNameAsync(string RuleMainName, object userState) {
            if ((this.DeleteRuleMainByNameOperationCompleted == null)) {
                this.DeleteRuleMainByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRuleMainByNameOperationCompleted);
            }
            this.InvokeAsync("DeleteRuleMainByName", new object[] {
                        RuleMainName}, this.DeleteRuleMainByNameOperationCompleted, userState);
        }
        
        private void OnDeleteRuleMainByNameOperationCompleted(object arg) {
            if ((this.DeleteRuleMainByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRuleMainByNameCompleted(this, new DeleteRuleMainByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://godaddy.com/IgdValidationRuleWebSvc/EvaluateRuleMain", RequestNamespace="http://godaddy.com", ResponseNamespace="http://godaddy.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EvaluateRuleMain([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RuleMainName, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("KeyValueOfstringstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)] ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] FactKeyValuePairs) {
            object[] results = this.Invoke("EvaluateRuleMain", new object[] {
                        RuleMainName,
                        FactKeyValuePairs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EvaluateRuleMainAsync(string RuleMainName, ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] FactKeyValuePairs) {
            this.EvaluateRuleMainAsync(RuleMainName, FactKeyValuePairs, null);
        }
        
        /// <remarks/>
        public void EvaluateRuleMainAsync(string RuleMainName, ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] FactKeyValuePairs, object userState) {
            if ((this.EvaluateRuleMainOperationCompleted == null)) {
                this.EvaluateRuleMainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEvaluateRuleMainOperationCompleted);
            }
            this.InvokeAsync("EvaluateRuleMain", new object[] {
                        RuleMainName,
                        FactKeyValuePairs}, this.EvaluateRuleMainOperationCompleted, userState);
        }
        
        private void OnEvaluateRuleMainOperationCompleted(object arg) {
            if ((this.EvaluateRuleMainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EvaluateRuleMainCompleted(this, new EvaluateRuleMainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://godaddy.com/IgdValidationRuleWebSvc/GetRuleByName", RequestNamespace="http://godaddy.com", ResponseNamespace="http://godaddy.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetRuleByName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RuleName) {
            object[] results = this.Invoke("GetRuleByName", new object[] {
                        RuleName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRuleByNameAsync(string RuleName) {
            this.GetRuleByNameAsync(RuleName, null);
        }
        
        /// <remarks/>
        public void GetRuleByNameAsync(string RuleName, object userState) {
            if ((this.GetRuleByNameOperationCompleted == null)) {
                this.GetRuleByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRuleByNameOperationCompleted);
            }
            this.InvokeAsync("GetRuleByName", new object[] {
                        RuleName}, this.GetRuleByNameOperationCompleted, userState);
        }
        
        private void OnGetRuleByNameOperationCompleted(object arg) {
            if ((this.GetRuleByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRuleByNameCompleted(this, new GetRuleByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://godaddy.com/IgdValidationRuleWebSvc/SetRuleAttributes", RequestNamespace="http://godaddy.com", ResponseNamespace="http://godaddy.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SetRuleAttributes([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] gdRuleAttributes RuleAttributes) {
            object[] results = this.Invoke("SetRuleAttributes", new object[] {
                        RuleAttributes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetRuleAttributesAsync(gdRuleAttributes RuleAttributes) {
            this.SetRuleAttributesAsync(RuleAttributes, null);
        }
        
        /// <remarks/>
        public void SetRuleAttributesAsync(gdRuleAttributes RuleAttributes, object userState) {
            if ((this.SetRuleAttributesOperationCompleted == null)) {
                this.SetRuleAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRuleAttributesOperationCompleted);
            }
            this.InvokeAsync("SetRuleAttributes", new object[] {
                        RuleAttributes}, this.SetRuleAttributesOperationCompleted, userState);
        }
        
        private void OnSetRuleAttributesOperationCompleted(object arg) {
            if ((this.SetRuleAttributesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetRuleAttributesCompleted(this, new SetRuleAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://godaddy.com/IgdValidationRuleWebSvc/DeleteRuleByName", RequestNamespace="http://godaddy.com", ResponseNamespace="http://godaddy.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeleteRuleByName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RuleName) {
            object[] results = this.Invoke("DeleteRuleByName", new object[] {
                        RuleName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRuleByNameAsync(string RuleName) {
            this.DeleteRuleByNameAsync(RuleName, null);
        }
        
        /// <remarks/>
        public void DeleteRuleByNameAsync(string RuleName, object userState) {
            if ((this.DeleteRuleByNameOperationCompleted == null)) {
                this.DeleteRuleByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRuleByNameOperationCompleted);
            }
            this.InvokeAsync("DeleteRuleByName", new object[] {
                        RuleName}, this.DeleteRuleByNameOperationCompleted, userState);
        }
        
        private void OnDeleteRuleByNameOperationCompleted(object arg) {
            if ((this.DeleteRuleByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRuleByNameCompleted(this, new DeleteRuleByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://godaddy.com/IgdValidationRuleWebSvc/GetFactByName", RequestNamespace="http://godaddy.com", ResponseNamespace="http://godaddy.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetFactByName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string FactName) {
            object[] results = this.Invoke("GetFactByName", new object[] {
                        FactName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFactByNameAsync(string FactName) {
            this.GetFactByNameAsync(FactName, null);
        }
        
        /// <remarks/>
        public void GetFactByNameAsync(string FactName, object userState) {
            if ((this.GetFactByNameOperationCompleted == null)) {
                this.GetFactByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFactByNameOperationCompleted);
            }
            this.InvokeAsync("GetFactByName", new object[] {
                        FactName}, this.GetFactByNameOperationCompleted, userState);
        }
        
        private void OnGetFactByNameOperationCompleted(object arg) {
            if ((this.GetFactByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFactByNameCompleted(this, new GetFactByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://godaddy.com/IgdValidationRuleWebSvc/SetFactAttributes", RequestNamespace="http://godaddy.com", ResponseNamespace="http://godaddy.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SetFactAttributes([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string FactName, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("KeyValueOfstringstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)] ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] AttributeNameValuePairs) {
            object[] results = this.Invoke("SetFactAttributes", new object[] {
                        FactName,
                        AttributeNameValuePairs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetFactAttributesAsync(string FactName, ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] AttributeNameValuePairs) {
            this.SetFactAttributesAsync(FactName, AttributeNameValuePairs, null);
        }
        
        /// <remarks/>
        public void SetFactAttributesAsync(string FactName, ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] AttributeNameValuePairs, object userState) {
            if ((this.SetFactAttributesOperationCompleted == null)) {
                this.SetFactAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFactAttributesOperationCompleted);
            }
            this.InvokeAsync("SetFactAttributes", new object[] {
                        FactName,
                        AttributeNameValuePairs}, this.SetFactAttributesOperationCompleted, userState);
        }
        
        private void OnSetFactAttributesOperationCompleted(object arg) {
            if ((this.SetFactAttributesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetFactAttributesCompleted(this, new SetFactAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://godaddy.com/IgdValidationRuleWebSvc/DeleteFactByName", RequestNamespace="http://godaddy.com", ResponseNamespace="http://godaddy.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeleteFactByName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string FactName) {
            object[] results = this.Invoke("DeleteFactByName", new object[] {
                        FactName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFactByNameAsync(string FactName) {
            this.DeleteFactByNameAsync(FactName, null);
        }
        
        /// <remarks/>
        public void DeleteFactByNameAsync(string FactName, object userState) {
            if ((this.DeleteFactByNameOperationCompleted == null)) {
                this.DeleteFactByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFactByNameOperationCompleted);
            }
            this.InvokeAsync("DeleteFactByName", new object[] {
                        FactName}, this.DeleteFactByNameOperationCompleted, userState);
        }
        
        private void OnDeleteFactByNameOperationCompleted(object arg) {
            if ((this.DeleteFactByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFactByNameCompleted(this, new DeleteFactByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://godaddy.com/IgdValidationRuleWebSvc/GetVersion", RequestNamespace="http://godaddy.com", ResponseNamespace="http://godaddy.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://godaddy.com/IgdValidationRuleWebSvc/Test", RequestNamespace="http://godaddy.com", ResponseNamespace="http://godaddy.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Test() {
            object[] results = this.Invoke("Test", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestAsync() {
            this.TestAsync(null);
        }
        
        /// <remarks/>
        public void TestAsync(object userState) {
            if ((this.TestOperationCompleted == null)) {
                this.TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOperationCompleted);
            }
            this.InvokeAsync("Test", new object[0], this.TestOperationCompleted, userState);
        }
        
        private void OnTestOperationCompleted(object arg) {
            if ((this.TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCompleted(this, new TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
    public partial class ArrayOfKeyValueOfstringstringKeyValueOfstringstring {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/gdValidationRuleWebSvc")]
    public partial class gdRuleAttributes {
        
        private string ruleConditionField;
        
        private string ruleDescriptionField;
        
        private string ruleExecuteRuleFalseField;
        
        private string ruleExecuteRuleTrueField;
        
        private string ruleFactNameField;
        
        private string ruleNameField;
        
        private string ruleReturnMessageFalseField;
        
        private string ruleReturnMessageTrueField;
        
        private string ruleReturnValueFalseField;
        
        private string ruleReturnValueTrueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RuleCondition {
            get {
                return this.ruleConditionField;
            }
            set {
                this.ruleConditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RuleDescription {
            get {
                return this.ruleDescriptionField;
            }
            set {
                this.ruleDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RuleExecuteRuleFalse {
            get {
                return this.ruleExecuteRuleFalseField;
            }
            set {
                this.ruleExecuteRuleFalseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RuleExecuteRuleTrue {
            get {
                return this.ruleExecuteRuleTrueField;
            }
            set {
                this.ruleExecuteRuleTrueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RuleFactName {
            get {
                return this.ruleFactNameField;
            }
            set {
                this.ruleFactNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RuleName {
            get {
                return this.ruleNameField;
            }
            set {
                this.ruleNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RuleReturnMessageFalse {
            get {
                return this.ruleReturnMessageFalseField;
            }
            set {
                this.ruleReturnMessageFalseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RuleReturnMessageTrue {
            get {
                return this.ruleReturnMessageTrueField;
            }
            set {
                this.ruleReturnMessageTrueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RuleReturnValueFalse {
            get {
                return this.ruleReturnValueFalseField;
            }
            set {
                this.ruleReturnValueFalseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RuleReturnValueTrue {
            get {
                return this.ruleReturnValueTrueField;
            }
            set {
                this.ruleReturnValueTrueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRuleMainByNameCompletedEventHandler(object sender, GetRuleMainByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRuleMainByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRuleMainByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRuleMainNameByIdCompletedEventHandler(object sender, GetRuleMainNameByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRuleMainNameByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRuleMainNameByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetRuleMainAttributesCompletedEventHandler(object sender, SetRuleMainAttributesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetRuleMainAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetRuleMainAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteRuleMainByNameCompletedEventHandler(object sender, DeleteRuleMainByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRuleMainByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRuleMainByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void EvaluateRuleMainCompletedEventHandler(object sender, EvaluateRuleMainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EvaluateRuleMainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EvaluateRuleMainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRuleByNameCompletedEventHandler(object sender, GetRuleByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRuleByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRuleByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetRuleAttributesCompletedEventHandler(object sender, SetRuleAttributesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetRuleAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetRuleAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteRuleByNameCompletedEventHandler(object sender, DeleteRuleByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRuleByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRuleByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFactByNameCompletedEventHandler(object sender, GetFactByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFactByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFactByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetFactAttributesCompletedEventHandler(object sender, SetFactAttributesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetFactAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetFactAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteFactByNameCompletedEventHandler(object sender, DeleteFactByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFactByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFactByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TestCompletedEventHandler(object sender, TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591