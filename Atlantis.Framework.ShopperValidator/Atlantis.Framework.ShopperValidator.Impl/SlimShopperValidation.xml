<?xml version="1.0" encoding="utf-8"?>
<RuleEngine>
  <Rules>
    <RuleMain id="RMain">
      <Actions>
        <Execute ruleId="RValidateFUsername" />
        <Execute ruleId="RValidateFPassword" />
        <Execute ruleId="RValidateFPin" />
        <Execute ruleId="RValidateFEmail" />
      </Actions>
    </RuleMain>

    <!-- START Username rules -->
    <Rule id="RValidateFUsername">
      <Actions>
        <Execute ruleId="RRequireFUsername" />
        <Execute ruleId="RMaxLengthFUsername" />
        <Execute ruleId="RNonNumericOnlyFUsername" />
        <Execute ruleId="RInvalidCharsFUsername" />
      </Actions>
    </Rule>
    <Rule id="RRequireFUsername">
      <Condition><![CDATA[ ISNULLOREMPTY(FUsername) ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FUsername" result="True">false</EvaluateIsValid>
        <EvaluateMessage factId="FUsername" result="True"><![CDATA[ "Username is required." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <Rule id="RMaxLengthFUsername">
      <Condition><![CDATA[ FUsername @MAXLENGTH FUsernameMaxLength ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FUsername" result="False">false</EvaluateIsValid>
        <EvaluateMessage factId="FUsername" result="False"><![CDATA[ "Username cannot be longer than " + FUsernameMaxLength + " characters long." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <Rule id="RNonNumericOnlyFUsername">
      <Condition><![CDATA[ FUsername @REGEX FNumericOnlyRegex ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FUsername" result="True">false</EvaluateIsValid>
        <EvaluateMessage factId="FUsername" result="True"><![CDATA[ "Username cannot be only numbers." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <Rule id="RInvalidCharsFUsername">
      <Condition><![CDATA[ FUsername @REGEX FInvalidCharsRegex ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FUsername" result="True">false</EvaluateIsValid>
        <EvaluateMessage factId="FUsername" result="True"><![CDATA[ "Username contains invalid characters." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <!-- END Username rules -->

    <!-- START Password rules -->
    <Rule id="RValidateFPassword">
      <Actions>
        <Execute ruleId="RRequireFPassword" />
        <Execute ruleId="RMaxLengthFPassword" />
        <Execute ruleId="RMinLengthFPassword" />
        <Execute ruleId="RRegexFPassword" />
        <Execute ruleId="RRequireFPassword2" />
        <Execute ruleId="RMatchFPasswordFPassword2" />
      </Actions>
    </Rule>
    <Rule id="RRequireFPassword">
      <Condition><![CDATA[ ISNULLOREMPTY(FPassword) ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FPassword" result="True">false</EvaluateIsValid>
        <EvaluateMessage factId="FPassword" result="True"><![CDATA[ "Password is required." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <Rule id="RMaxLengthFPassword">
      <Condition><![CDATA[ FPassword @MAXLENGTH FPasswordMaxLength ]]></Condition>
      <Actions>
        <!-- NOTE: Password max length should not be shown to user, so it invalidates the FPasswordMaxLength Fact -->
        <EvaluateIsValid factId="FPasswordMaxLength" result="False">false</EvaluateIsValid>
        <EvaluateMessage factId="FPasswordMaxLength" result="False"><![CDATA[ "Password cannot be longer than " + FPasswordMaxLength + " characters long." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <Rule id="RMinLengthFPassword">
      <Condition><![CDATA[ FPassword @MINLENGTH FPasswordMinLength ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FPassword" result="False">false</EvaluateIsValid>
        <EvaluateMessage factId="FPassword" result="False"><![CDATA[ "Password must be at least " + FPasswordMinLength + " characters long." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <Rule id="RRegexFPassword">
      <Condition><![CDATA[ FPassword @REGEX FPasswordRegex ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FPassword" result="False">false</EvaluateIsValid>
        <EvaluateMessage factId="FPassword" result="False"><![CDATA[ "Password must contain at least 1 uppercase letter, 1 number, and cannot begin or end with a space." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <Rule id="RRequireFPassword2">
      <Condition><![CDATA[ ISNULLOREMPTY(FPassword2) ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FPassword2" result="True">false</EvaluateIsValid>
        <EvaluateMessage factId="FPassword2" result="True"><![CDATA[ "Confirm Password is required." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <Rule id="RMatchFPasswordFPassword2">
      <Condition><![CDATA[ FPassword != FPassword2 ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FPassword2" result="True">false</EvaluateIsValid>
        <EvaluateMessage factId="FPassword2" result="True"><![CDATA[ "Passwords must match." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <!-- END Password rules -->

    <!-- START Pin rules -->
    <Rule id="RValidateFPin">
      <Actions>
        <Execute ruleId="RRequireFPin" />
      </Actions>
    </Rule>
    <Rule id="RRequireFPin">
      <Condition><![CDATA[ ISNULLOREMPTY(FPin) ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FPin" result="True">false</EvaluateIsValid>
        <EvaluateMessage factId="FPin" result="True"><![CDATA[ "PIN is required." ]]></EvaluateMessage>
        <Execute ruleId="RMaxLengthFPin" result="False" />
        <Execute ruleId="RMinLengthFPin" result="False" />
        <Execute ruleId="RNumericOnlyFPin" result="False" />
        <Execute ruleId="RSequentialNumericAscFPin" result="False" />
        <Execute ruleId="RSequentialNumericDescFPin" result="False" />
      </Actions>
    </Rule>
    <Rule id="RMaxLengthFPin">
      <Condition><![CDATA[ FPin @MAXLENGTH FPinMaxLength ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FPin" result="False">false</EvaluateIsValid>
        <EvaluateMessage factId="FPin" result="False"><![CDATA[ "PIN cannot be longer than " + FPinMaxLength + " characters long." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <Rule id="RMinLengthFPin">
      <Condition><![CDATA[ FPin @MINLENGTH FPinMinLength ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FPin" result="False">false</EvaluateIsValid>
        <EvaluateMessage factId="FPin" result="False"><![CDATA[ "PIN must be at least " + FPinMinLength + " characters long." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <Rule id="RNumericOnlyFPin">
      <Condition><![CDATA[ FPin @REGEX FNumericOnlyRegex ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FPin" result="False">false</EvaluateIsValid>
        <EvaluateMessage factId="FPin" result="False"><![CDATA[ "PIN must contain only numbers." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <Rule id="RSequentialNumericAscFPin">
      <Condition><![CDATA[ FPin @SUBSTRING "0123456789012" ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FPin" result="True">false</EvaluateIsValid>
        <EvaluateMessage factId="FPin" result="True"><![CDATA[ "PIN cannot be any straight numerical sequence of digits." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <Rule id="RSequentialNumericDescFPin">
      <Condition><![CDATA[ FPin @SUBSTRING "0987654321098" ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FPin" result="True">false</EvaluateIsValid>
        <EvaluateMessage factId="FPin" result="True"><![CDATA[ "PIN cannot be any straight numerical sequence of digits." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <!-- END Pin rules -->

    <!-- START Email rules -->
    <Rule id="RValidateFEmail">
      <Actions>
        <Execute ruleId="RRequireFEmail" />
        <Execute ruleId="RMaxLengthFEmail" />
        <Execute ruleId="RRegexFEmail" />
      </Actions>
    </Rule>
    <Rule id="RRequireFEmail">
      <Condition><![CDATA[ ISNULLOREMPTY(FEmail) ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FEmail" result="True">false</EvaluateIsValid>
        <EvaluateMessage factId="FEmail" result="True"><![CDATA[ "Email is required." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <Rule id="RMaxLengthFEmail">
      <Condition><![CDATA[ FEmail @MAXLENGTH FEmailMaxLength ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FEmail" result="False">false</EvaluateIsValid>
        <EvaluateMessage factId="FEmail" result="False"><![CDATA[ "Email cannot be longer than " + FEmailMaxLength + " characters long." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <Rule id="RRegexFEmail">
      <Condition><![CDATA[ FEmail @REGEX FEmailRegex ]]></Condition>
      <Actions>
        <EvaluateIsValid factId="FEmail" result="False">false</EvaluateIsValid>
        <EvaluateMessage factId="FEmail" result="False"><![CDATA[ "Email is an invalid format." ]]></EvaluateMessage>
      </Actions>
    </Rule>
    <!-- END Email rules -->
  </Rules>
  <!--
    After this rules doc is compiled, the following "Fact" elements exist in memory as a Fact object with
    three properties: Value, IsValid, Messages.
  -->
  <Facts>
    <!--Model values to validate-->
    <Fact id="FUsername"    key="txtUsername"         type="string" modelId="Shopper" />
    <Fact id="FPassword"    key="txtCreatePassword"   type="string" modelId="Shopper" />
    <Fact id="FPassword2"   key="txtCreatePassword2"  type="string" modelId="Shopper" />
    <Fact id="FPin"         key="txtPin"              type="string" modelId="Shopper" />
    <Fact id="FEmail"       key="txtEmail"            type="string" modelId="Shopper" />

    <!--Values used to validate the other facts (regex, max, min, etc.)-->
    <Fact id="FUsernameMaxLength"  key="usernameMaxLength"  type="double" modelId="Shopper" />
    <!-- NOTE: Password max length should not be shown to user, so it invalidates the FPasswordMaxLength Fact -->
    <Fact id="FPasswordMaxLength"  key="passwordMaxLength"  type="double" modelId="Shopper" />
    <Fact id="FPasswordMinLength"  key="passwordMinLength"  type="double" modelId="Shopper" />
    <Fact id="FPasswordRegex"      key="passwordRegex"      type="string" modelId="Shopper" />
    <Fact id="FPinMaxLength"       key="pinMaxLength"       type="double" modelId="Shopper" />
    <Fact id="FPinMinLength"       key="pinMinLength"       type="double" modelId="Shopper" />
    <Fact id="FEmailRegex"         key="emailRegex"         type="string" modelId="Shopper" />
    <Fact id="FEmailMaxLength"     key="emailMaxLength"     type="double" modelId="Shopper" />
    <Fact id="FNumericOnlyRegex"   key="numericOnlyRegex"   type="string" modelId="Shopper" />
    <Fact id="FInvalidCharsRegex"  key="invalidCharsRegex"  type="string" modelId="Shopper" />
  </Facts>
</RuleEngine>