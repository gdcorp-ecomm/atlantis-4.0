<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="maxLengthError" xml:space="preserve">
    <value>{0}は{1} 文字未満でなければなりません。</value>
  </data>
  <data name="minLengthError" xml:space="preserve">
    <value>{0}は{1} 文字より長くなければなりません。</value>
  </data>
  <data name="invalidData" xml:space="preserve">
    <value>無効なデータ</value>
  </data>
  <data name="equalLengthAlpha" xml:space="preserve">
    <value>{0}は{1} 文字でなければなりません。 </value>
  </data>
  <data name="equalLengthNumeric" xml:space="preserve">
    <value>{0}は{1} 桁でなければなりません。</value>
  </data>
  <data name="invalidCharacters" xml:space="preserve">
    <value>{0} には無効な文字があります。</value>
  </data>
  <data name="match" xml:space="preserve">
    <value>{0}は{1} と等しくなければなりません。</value>
  </data>
  <data name="notMatch" xml:space="preserve">
    <value>{0}を{1} と同じにすることはできません。</value>
  </data>
  <data name="numericRule" xml:space="preserve">
    <value>{0} には数字だけを含めることができます。</value>
  </data>
  <data name="isInvalid" xml:space="preserve">
    <value>{0} は無効です。</value>
  </data>
  <data name="phoneMustStartAndContain" xml:space="preserve">
    <value>{0} の先頭は0または1であってはなりません。{1} 文字でなければなりません </value>
  </data>
  <data name="phoneMustContainCharacters" xml:space="preserve">
    <value>{0}は{1} 文字でなければなりません</value>
  </data>
  <data name="mustBeNumeric" xml:space="preserve">
    <value>{0} は数値でなければなりません</value>
  </data>
  <data name="invalidFormat" xml:space="preserve">
    <value>{0} の形式が無効です。</value>
  </data>
  <data name="required" xml:space="preserve">
    <value>{0} は必須です</value>
  </data>
  <data name="birthdayValid" xml:space="preserve">
    <value>入力する誕生日は有効な値でなければなりません</value>
  </data>
  <data name="straightNumerical" xml:space="preserve">
    <value>{0} を連続した数字にすることはできません。</value>
  </data>
  <data name="commonPhrase" xml:space="preserve">
    <value>{0} には一般的な単語や語句を含めることはできません。</value>
  </data>
  <data name="lastFive" xml:space="preserve">
    <value>直前の5つのパスワードを再利用することはできません。</value>
  </data>
  <data name="matchesHint" xml:space="preserve">
    <value>{0} はパスワードのヒントと同じにすることはできません。</value>
  </data>
  <data name="samePassword" xml:space="preserve">
    <value>30日以内は同じパスワードを使用できません。</value>
  </data>
  <data name="isInvalidStatusCode" xml:space="preserve">
    <value>{0} は無効です。ステータスコード: {1}</value>
  </data>
  <data name="passwordConfirm" xml:space="preserve">
    <value>{0}は{1} 文字以下でなければなりません。検証する前に {0} を削除します。</value>
  </data>
  <data name="usernameExists" xml:space="preserve">
    <value>ユーザー名はすでに存在します</value>
  </data>
  <data name="username" xml:space="preserve">
    <value>ユーザー名</value>
  </data>
  <data name="birthday" xml:space="preserve">
    <value>誕生日</value>
  </data>
  <data name="address1" xml:space="preserve">
    <value>住所 1</value>
  </data>
  <data name="address2" xml:space="preserve">
    <value>住所 2</value>
  </data>
  <data name="phone" xml:space="preserve">
    <value>電話番号</value>
  </data>
  <data name="callInPin" xml:space="preserve">
    <value>連絡PIN</value>
  </data>
  <data name="city" xml:space="preserve">
    <value>都市</value>
  </data>
  <data name="country" xml:space="preserve">
    <value>国</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>メールアドレス</value>
  </data>
  <data name="firstName" xml:space="preserve">
    <value>名</value>
  </data>
  <data name="lastName" xml:space="preserve">
    <value>姓</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>パスワード</value>
  </data>
  <data name="confirmPassword" xml:space="preserve">
    <value>パスワードの確認</value>
  </data>
  <data name="passwordHint" xml:space="preserve">
    <value>パスワードのヒント</value>
  </data>
  <data name="ext" xml:space="preserve">
    <value>内線番号</value>
  </data>
  <data name="state" xml:space="preserve">
    <value>州/県</value>
  </data>
  <data name="zip" xml:space="preserve">
    <value>郵便番号</value>
  </data>
  <data name="alreadyExists" xml:space="preserve">
    <value>{0} はすでに存在します</value>
  </data>
  <data name="cannotBeNumeric" xml:space="preserve">
    <value>{0} は数字だけにすることはできません</value>
  </data>
  <data name="pinOneDigit" xml:space="preserve">
    <value>PINは2文字以上にする必要があります</value>
  </data>
  <data name="errorEmailInvalidFormat" xml:space="preserve">
    <value>[メールアドレス]の形式が無効です。</value>
  </data>
  <data name="errorEmailMaxLength" xml:space="preserve">
    <value>[メールアドレス]は {0} 文字以下でなければなりません。</value>
    <comment>{0} replaced with the max email length</comment>
  </data>
  <data name="errorEmailRequired" xml:space="preserve">
    <value>[メールアドレス]は必須です。</value>
  </data>
  <data name="errorPassword2Required" xml:space="preserve">
    <value>[パスワードの確認]は必須です。</value>
  </data>
  <data name="errorPasswordInvalidFormat" xml:space="preserve">
    <value>パスワードは1つ以上の大文字および数字を含んでいる必要があり、先頭と末尾をスペースにすることはできません。</value>
  </data>
  <data name="errorPasswordMaxLength" xml:space="preserve">
    <value>パスワードは{0}文字以下でなければなりません。</value>
    <comment>{0} replaced with the max password length</comment>
  </data>
  <data name="errorPasswordMinLength" xml:space="preserve">
    <value>パスワードは {0} 文字以上でなければなりません。</value>
    <comment>{0} replaced with the min password length</comment>
  </data>
  <data name="errorPasswordMismatch" xml:space="preserve">
    <value>これらのパスワードは一致する必要があります。</value>
  </data>
  <data name="errorPasswordRequired" xml:space="preserve">
    <value>パスワードは必須です。</value>
  </data>
  <data name="errorPinMaxLength" xml:space="preserve">
    <value>PINは{0}文字より長くすることはできません。</value>
    <comment>{0} replaced with the max PIN length</comment>
  </data>
  <data name="errorPinMinLength" xml:space="preserve">
    <value>PINは {0} 文字以上でなければなりません。</value>
    <comment>{0} replaced with the min PIN length</comment>
  </data>
  <data name="errorPinNumeric" xml:space="preserve">
    <value>PINに含めることができるのは数字だけです。</value>
  </data>
  <data name="errorPinRequired" xml:space="preserve">
    <value>PINは必須です。</value>
  </data>
  <data name="errorPinSequential" xml:space="preserve">
    <value>PINは連続した数字にすることはできません。</value>
  </data>
  <data name="errorUsernameInvalidCharacters" xml:space="preserve">
    <value>ユーザー名に無効な文字が含まれています。</value>
  </data>
  <data name="errorUsernameMaxLength" xml:space="preserve">
    <value>ユーザー名は {0} 文字より長くすることはできません。</value>
    <comment>{0} replaced with the max username length</comment>
  </data>
  <data name="errorUsernameNumericOnly" xml:space="preserve">
    <value>ユーザー名は数字だけにすることはできません。</value>
  </data>
  <data name="errorUsernameRequired" xml:space="preserve">
    <value>ユーザー名は必須です。</value>
  </data>
</root>