<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="maxLengthError" xml:space="preserve">
    <value>{0} 不得超过 {1} 个字符。</value>
  </data>
  <data name="minLengthError" xml:space="preserve">
    <value>{0} 不得小于 {1} 个字符。</value>
  </data>
  <data name="invalidData" xml:space="preserve">
    <value>数据无效</value>
  </data>
  <data name="equalLengthAlpha" xml:space="preserve">
    <value>{0} 必须为 {1} 个字符。</value>
  </data>
  <data name="equalLengthNumeric" xml:space="preserve">
    <value>{0} 必须为 {1} 个数字。</value>
  </data>
  <data name="invalidCharacters" xml:space="preserve">
    <value>{0} 包含无效字符</value>
  </data>
  <data name="match" xml:space="preserve">
    <value>{0} 必须等于 {1}</value>
  </data>
  <data name="notMatch" xml:space="preserve">
    <value>{0} 不可等于 {1}</value>
  </data>
  <data name="numericRule" xml:space="preserve">
    <value>{0} 只可包含数字。</value>
  </data>
  <data name="isInvalid" xml:space="preserve">
    <value>{0} 无效；</value>
  </data>
  <data name="phoneMustStartAndContain" xml:space="preserve">
    <value>{0} 不可以 0 或 1 开头。必须包含 {1} 个字符 </value>
  </data>
  <data name="phoneMustContainCharacters" xml:space="preserve">
    <value>{0} 必须包含 {1} 个字符</value>
  </data>
  <data name="mustBeNumeric" xml:space="preserve">
    <value>{0} 必须为数字</value>
  </data>
  <data name="invalidFormat" xml:space="preserve">
    <value>{0} 格式无效。</value>
  </data>
  <data name="required" xml:space="preserve">
    <value>{0} 必填</value>
  </data>
  <data name="birthdayValid" xml:space="preserve">
    <value>如提供生日，则必须提供有效值</value>
  </data>
  <data name="straightNumerical" xml:space="preserve">
    <value>{0} 不可为连续数字顺序。</value>
  </data>
  <data name="commonPhrase" xml:space="preserve">
    <value>{0} 不可包含通用字词或短语。</value>
  </data>
  <data name="lastFive" xml:space="preserve">
    <value>不能重新使用最近用过的 5 个密码。</value>
  </data>
  <data name="matchesHint" xml:space="preserve">
    <value>{0} 不可与密码提示相同。</value>
  </data>
  <data name="samePassword" xml:space="preserve">
    <value>在 30 天之内不能重复使用同一个密码。</value>
  </data>
  <data name="isInvalidStatusCode" xml:space="preserve">
    <value>{0} 无效。状况代码：{1}</value>
  </data>
  <data name="passwordConfirm" xml:space="preserve">
    <value>{0} 不可超过 {1} 个字符。向验证器提交前修改 {0}。</value>
  </data>
  <data name="usernameExists" xml:space="preserve">
    <value>用户名已存在</value>
  </data>
  <data name="username" xml:space="preserve">
    <value>用户名</value>
  </data>
  <data name="birthday" xml:space="preserve">
    <value>生日</value>
  </data>
  <data name="address1" xml:space="preserve">
    <value>地址 1</value>
  </data>
  <data name="address2" xml:space="preserve">
    <value>地址 2</value>
  </data>
  <data name="phone" xml:space="preserve">
    <value>电话</value>
  </data>
  <data name="callInPin" xml:space="preserve">
    <value>客服识别码</value>
  </data>
  <data name="city" xml:space="preserve">
    <value>城市</value>
  </data>
  <data name="country" xml:space="preserve">
    <value>国家/地区</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>电子邮件</value>
  </data>
  <data name="firstName" xml:space="preserve">
    <value>名字</value>
  </data>
  <data name="lastName" xml:space="preserve">
    <value>姓氏</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>密码</value>
  </data>
  <data name="confirmPassword" xml:space="preserve">
    <value>确认密码</value>
  </data>
  <data name="passwordHint" xml:space="preserve">
    <value>密码提示</value>
  </data>
  <data name="ext" xml:space="preserve">
    <value>分机号</value>
  </data>
  <data name="state" xml:space="preserve">
    <value>省/直辖市/自治区</value>
  </data>
  <data name="zip" xml:space="preserve">
    <value>邮政编码</value>
  </data>
  <data name="alreadyExists" xml:space="preserve">
    <value>{0} 已存在</value>
  </data>
  <data name="cannotBeNumeric" xml:space="preserve">
    <value>{0} 不可只包含数字</value>
  </data>
  <data name="pinOneDigit" xml:space="preserve">
    <value>PIN 必须包含超过一位数</value>
  </data>
  <data name="errorEmailInvalidFormat" xml:space="preserve">
    <value>电子邮件格式无效。</value>
  </data>
  <data name="errorEmailMaxLength" xml:space="preserve">
    <value>电子邮件长度不得超过 {0} 个字符。</value>
    <comment>{0} replaced with the max email length</comment>
  </data>
  <data name="errorEmailRequired" xml:space="preserve">
    <value>电子邮件为必填项。</value>
  </data>
  <data name="errorPassword2Required" xml:space="preserve">
    <value>确认密码为必填项。</value>
  </data>
  <data name="errorPasswordInvalidFormat" xml:space="preserve">
    <value>密码必须包含至少一个大写字母、一个数字，并且不能以空格开头或结尾。</value>
  </data>
  <data name="errorPasswordMaxLength" xml:space="preserve">
    <value>密码长度不得超过 {0} 个字符。</value>
    <comment>{0} replaced with the max password length</comment>
  </data>
  <data name="errorPasswordMinLength" xml:space="preserve">
    <value>密码长度不得少于 {0} 个字符。</value>
    <comment>{0} replaced with the min password length</comment>
  </data>
  <data name="errorPasswordMismatch" xml:space="preserve">
    <value>密码必须匹配。</value>
  </data>
  <data name="errorPasswordRequired" xml:space="preserve">
    <value>密码为必填项。</value>
  </data>
  <data name="errorPinMaxLength" xml:space="preserve">
    <value>PIN 长度不得超过 {0} 个字符。</value>
    <comment>{0} replaced with the max PIN length</comment>
  </data>
  <data name="errorPinMinLength" xml:space="preserve">
    <value>PIN 长度不得少于 {0} 个字符。</value>
    <comment>{0} replaced with the min PIN length</comment>
  </data>
  <data name="errorPinNumeric" xml:space="preserve">
    <value>PIN 只可包含数字。</value>
  </data>
  <data name="errorPinRequired" xml:space="preserve">
    <value>PIN 为必填项。</value>
  </data>
  <data name="errorPinSequential" xml:space="preserve">
    <value>PIN 不可为连续数字顺序。</value>
  </data>
  <data name="errorUsernameInvalidCharacters" xml:space="preserve">
    <value>用户名包含无效字符。</value>
  </data>
  <data name="errorUsernameMaxLength" xml:space="preserve">
    <value>用户名长度不可超过 {0} 个字符。</value>
    <comment>{0} replaced with the max username length</comment>
  </data>
  <data name="errorUsernameNumericOnly" xml:space="preserve">
    <value>用户名不可只包含数字。</value>
  </data>
  <data name="errorUsernameRequired" xml:space="preserve">
    <value>用户名为必填项。</value>
  </data>
</root>