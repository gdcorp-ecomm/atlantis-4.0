//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18052.
// 
#pragma warning disable 1591

namespace Atlantis.Framework.DotTypeAvailability.Impl.TldAvailSvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ITldAvailSvc", Namespace="http://tempuri.org/")]
    public partial class BasicHttpBinding_ITldAvailSvc : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAvailableTldDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BasicHttpBinding_ITldAvailSvc() {
            this.Url = global::Atlantis.Framework.DotTypeAvailability.Impl.Properties.Settings.Default.Atlantis_Framework_DotTypeAvailability_Impl_TldAvailSvc_TldAvailSvc;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAvailableTldDataCompletedEventHandler GetAvailableTldDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://godaddy.com/ITldAvailSvc/GetAvailableTldData", RequestNamespace="http://godaddy.com", ResponseNamespace="http://godaddy.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TldDataResponse GetAvailableTldData() {
            object[] results = this.Invoke("GetAvailableTldData", new object[0]);
            return ((TldDataResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableTldDataAsync() {
            this.GetAvailableTldDataAsync(null);
        }
        
        /// <remarks/>
        public void GetAvailableTldDataAsync(object userState) {
            if ((this.GetAvailableTldDataOperationCompleted == null)) {
                this.GetAvailableTldDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableTldDataOperationCompleted);
            }
            this.InvokeAsync("GetAvailableTldData", new object[0], this.GetAvailableTldDataOperationCompleted, userState);
        }
        
        private void OnGetAvailableTldDataOperationCompleted(object arg) {
            if ((this.GetAvailableTldDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableTldDataCompleted(this, new GetAvailableTldDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpsBinding_ITldAvailSvc", Namespace="http://tempuri.org/")]
    public partial class BasicHttpsBinding_ITldAvailSvc : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAvailableTldDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BasicHttpsBinding_ITldAvailSvc() {
            this.Url = "https://regcheck.dev.glbt1.gdg/TldAvailabilitySvc/TldAvailSvc.svc";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAvailableTldDataCompletedEventHandler GetAvailableTldDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://godaddy.com/ITldAvailSvc/GetAvailableTldData", RequestNamespace="http://godaddy.com", ResponseNamespace="http://godaddy.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TldDataResponse GetAvailableTldData() {
            object[] results = this.Invoke("GetAvailableTldData", new object[0]);
            return ((TldDataResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableTldDataAsync() {
            this.GetAvailableTldDataAsync(null);
        }
        
        /// <remarks/>
        public void GetAvailableTldDataAsync(object userState) {
            if ((this.GetAvailableTldDataOperationCompleted == null)) {
                this.GetAvailableTldDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableTldDataOperationCompleted);
            }
            this.InvokeAsync("GetAvailableTldData", new object[0], this.GetAvailableTldDataOperationCompleted, userState);
        }
        
        private void OnGetAvailableTldDataOperationCompleted(object arg) {
            if ((this.GetAvailableTldDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableTldDataCompleted(this, new GetAvailableTldDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18054")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://godaddy.com")]
    public partial class TldDataResponse {
        
        private TldDataType tldDataField;
        
        /// <remarks/>
        public TldDataType tldData {
            get {
                return this.tldDataField;
            }
            set {
                this.tldDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18054")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://godaddy.com")]
    public partial class TldDataType {
        
        private TldType[] tldListField;
        
        private long ttlMinutesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("tld")]
        public TldType[] tldList {
            get {
                return this.tldListField;
            }
            set {
                this.tldListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long ttlMinutes {
            get {
                return this.ttlMinutesField;
            }
            set {
                this.ttlMinutesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18054")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://godaddy.com")]
    public partial class TldType {
        
        private Phase[] phasesField;
        
        private string nameField;
        
        private string aLabelField;
        
        private bool leafPageField;
        
        private bool isVisibleInDomainSpinsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("phase")]
        public Phase[] phases {
            get {
                return this.phasesField;
            }
            set {
                this.phasesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string aLabel {
            get {
                return this.aLabelField;
            }
            set {
                this.aLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool leafPage {
            get {
                return this.leafPageField;
            }
            set {
                this.leafPageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool isVisibleInDomainSpins {
            get {
                return this.isVisibleInDomainSpinsField;
            }
            set {
                this.isVisibleInDomainSpinsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18054")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://godaddy.com")]
    public partial class Phase {
        
        private string nameField;
        
        private string startDateField;
        
        private string stopDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string stopDate {
            get {
                return this.stopDateField;
            }
            set {
                this.stopDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAvailableTldDataCompletedEventHandler(object sender, GetAvailableTldDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableTldDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableTldDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TldDataResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TldDataResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591